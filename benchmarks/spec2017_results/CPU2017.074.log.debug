==============================================================================
Debug log for CPU2017.  This file contains very detailed debugging
output from the CPU2017 tools (as if "--verbose 99" had been specified) and is
typically useful only to developers of the CPU2017 toolset.

For a successful run, this debug log will be removed automatically, unless you
specify "--keeptmp" on the command line, or "keeptmp=1" in your config file.

If you file a support request with cpu2017support@spec.org, you may be
asked to submit this file.
------------------------------------------------------------------------------

Environment variables that may have been set or changed by shrc:
SPEC: /home/ucsd/SpectreSandboxing/spec2017
PATH: /home/ucsd/SpectreSandboxing/spec2017/bin:/home/ucsd/.cargo/bin:/home/ucsd/.local/bin:/home/ucsd/bin:/usr/share/Modules/bin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin
SPECPERLLIB: /home/ucsd/SpectreSandboxing/spec2017/bin/lib:/home/ucsd/SpectreSandboxing/spec2017/bin
LD_LIBRARY_PATH: 
DYLD_LIBRARY_PATH: 
LC_ALL: C
LC_LANG: C
SPECDB_PWD: /home/ucsd/SpectreSandboxing/spec2017/config
------------------------------------------------------------------------------

Runspec's verbose version output:
                 This is the SPEC CPU2017 benchmark tools suite.

Version summary:
    CPU2017 version: 1.0.2
 Benchmarks version: 1.0.2
      Tools version: 1.0.2
    runcpu version: v5825 ($Id: runcpu 5825 2017-06-28 16:13:35Z CloyceS $)

Tools information:
 Tools package installed: linux-x86_64
 File locking method: fcntl(2) (probably network-safe)
Mode |  UID  |  GID  |   Size  |   Modification Time  | Name
0755 | 1004  | 1004  | 1963960 |  2020-04-08 18:13:53 | specperl
0755 | 1004  | 1004  |  253616 |  2020-04-08 18:13:53 | specmake
0755 | 1004  | 1004  |   43992 |  2020-04-08 18:13:53 | specinvoke
0755 | 1004  | 1004  |  272664 |  2020-04-08 18:13:53 | specrxp
0777 | 0     | 0     |    1577 |  2020-05-21 19:14:44 | runcpu
0777 | 0     | 0     |  177367 |  2020-05-21 19:14:44 | harness/runcpu
0777 | 0     | 0     |    1577 |  2020-05-21 19:14:44 | specpp
0777 | 0     | 0     |   89993 |  2020-05-21 19:14:44 | harness/specpp
0777 | 0     | 0     |    1577 |  2020-05-21 19:14:44 | specdiff
0777 | 0     | 0     |    9806 |  2020-05-21 19:14:44 | harness/specdiff
0755 | 1004  | 1004  |  269856 |  2020-04-08 18:13:53 | specxz
0755 | 1004  | 1004  |   77056 |  2020-04-08 18:13:53 | specsha512sum

Version info for specperl (specperl): This is specperl 5, version 24, subversion 0 (v5.24.0) built for x86_64-linux
                                      Compiled at Apr  8 2020 18:03:45
                                      For more detail on specperl, say 'specperl -V'
Version info for specmake (specmake): GNU Make 4.2.1
Version info for specinvoke (specinvoke): specinvoke r4356 (OS implementation r4356)
Version info for specrxp ($SPEC/bin/specrxp): RXP 1.5.0 Copyright Richard Tobin, LTG, HCRC, University of Edinburgh
                                              Modified for use in SPEC benchmarks - 14 April 2011
Version info for specpp ($SPEC/bin/specpp): specpp version 1.8.0SPEC
Version info for specxz ($SPEC/bin/specxz): xz (XZ Utils) 5.2.2
Version info for specsha512sum ($SPEC/bin/specsha512sum): sha512sum (specsum) 1.3

==============================================================================

1590166589.93: runcpu v5825 started at 2020-05-22 09:56:29 on "tigerlake1-ravi"
1590166589.93: runcpu is: /home/ucsd/SpectreSandboxing/spec2017/bin/harness/runcpu
1590166589.93: runcpu: runcpu --config=wasm_lucet --action=build --define cores=1 600
1590166589.93: toolset: linux-x86_64

1590166589.94: Locating benchmarks...Created default regexp '(?:^|(?<=\s))[-/]DSPEC(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]USPEC(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for USPEC in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_CPU in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DNDEBUG(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DNDEBUG in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]UNDEBUG(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for UNDEBUG in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_WINDOWS(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_WINDOWS in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_MEM_IO(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_MEM_IO in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_ILP32(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_ILP32 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_P64(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_P64 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_LP64(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_LP64 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_ILP64(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_ILP64 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_SUPPRESS_OPENMP(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_SUPPRESS_OPENMP in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_AUTO_SUPPRESS_OPENMP(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_AUTO_SUPPRESS_OPENMP in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_OPENMP(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_OPENMP in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_NO_AUTO_BYTEORDER(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_NO_AUTO_BYTEORDER in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166589.94: Reading suite directory for 'flags-mandatory.xml', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166589.94: Reading suite directory for 'CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166589.94:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '557.xz_r'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/557.xz_r/Spec/object.pm in 0.001085043s
1590166589.95:     Instantiated Spec::Benchmark::xz_r557 in 0.000249147s
1590166589.95:     Finding src.alts took 0.000025034s
1590166589.95:   Setting up xz_r took 0.001526833s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_any_fortran.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '508.namd_r'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/508.namd_r/Spec/object.pm in 0.000260115s
1590166589.95:     Instantiated Spec::Benchmark::namd_r508 in 0.000141144s
1590166589.95:     Finding src.alts took 0.000018120s
1590166589.95:   Setting up namd_r took 0.000540018s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '554.roms_r'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/554.roms_r/Spec/object.pm in 0.000833988s
1590166589.95:     Instantiated Spec::Benchmark::roms_r554 in 0.000171900s
1590166589.95:     Finding src.alts took 0.000019073s
1590166589.95:   Setting up roms_r took 0.001149178s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_pure_cpp.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '996.specrand_fs'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/996.specrand_fs/Spec/object.pm in 0.000211954s
1590166589.95:     Instantiated Spec::Benchmark::specrand_fs996 in 0.000121117s
1590166589.95:     Finding src.alts took 0.000014067s
1590166589.95:   Setting up specrand_fs took 0.000464916s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_pure_cpp.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '500.perlbench_r'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/500.perlbench_r/Spec/object.pm in 0.000719070s
1590166589.95:     Instantiated Spec::Benchmark::perlbench_r500 in 0.000154972s
1590166589.95:     Finding src.alts took 0.000019073s
1590166589.95:   Setting up perlbench_r took 0.001027107s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_pure_c.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '519.lbm_r'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/519.lbm_r/Spec/object.pm in 0.000203133s
1590166589.95:     Instantiated Spec::Benchmark::lbm_r519 in 0.000122070s
1590166589.95:     Finding src.alts took 0.000015020s
1590166589.95:   Setting up lbm_r took 0.000458956s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_any_c.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '627.cam4_s'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/627.cam4_s/Spec/object.pm in 0.000285149s
1590166589.95:     Instantiated Spec::Benchmark::cam4_s627 in 0.000144005s
1590166589.95:     Finding src.alts took 0.000015974s
1590166589.95:   Setting up cam4_s took 0.000565052s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '548.exchange2_r'
1590166589.95:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/548.exchange2_r/Spec/object.pm in 0.000204802s
1590166589.95:     Instantiated Spec::Benchmark::exchange2_r548 in 0.000115871s
1590166589.95:     Finding src.alts took 0.000012875s
1590166589.95:   Setting up exchange2_r took 0.000457048s

1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intopenmp.bset'
1590166589.95:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '505.mcf_r'
1590166589.96:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/505.mcf_r/Spec/object.pm in 0.000209093s
1590166589.96:     Instantiated Spec::Benchmark::mcf_r505 in 0.000121832s
1590166589.96:     Finding src.alts took 0.000015020s
1590166589.96:   Setting up mcf_r took 0.000463009s

1590166589.96:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed_c.bset'
1590166589.96:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '538.imagick_r'
1590166589.96:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/538.imagick_r/Spec/object.pm in 0.000473976s
1590166589.96:     Instantiated Spec::Benchmark::imagick_r538 in 0.000121117s
1590166589.96:     Finding src.alts took 0.000016928s
1590166589.96:   Setting up imagick_r took 0.000739098s

1590166589.96:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_pure_c.bset'
1590166589.96:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_any_cpp.bset'
1590166589.96:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '502.gcc_r'
1590166589.97:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/502.gcc_r/Spec/object.pm in 0.009336948s
1590166589.97:     Instantiated Spec::Benchmark::gcc_r502 in 0.000267982s
1590166589.97:     Finding src.alts took 0.000022888s
1590166589.97:   Setting up gcc_r took 0.009783983s

1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_pure_cpp.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'osdi.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed_cpp.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed_fortran.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_pure_fortran.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed_cpp.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '648.exchange2_s'
1590166589.97:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/648.exchange2_s/Spec/object.pm in 0.000206947s
1590166589.97:     Instantiated Spec::Benchmark::exchange2_s648 in 0.000123024s
1590166589.97:     Finding src.alts took 0.000020981s
1590166589.97:   Setting up exchange2_s took 0.000468016s

1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '631.deepsjeng_s'
1590166589.97:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/631.deepsjeng_s/Spec/object.pm in 0.000171900s
1590166589.97:     Instantiated Spec::Benchmark::deepsjeng_s631 in 0.000113964s
1590166589.97:     Finding src.alts took 0.000013113s
1590166589.97:   Setting up deepsjeng_s took 0.000408173s

1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'any_c.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'serial_speed.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mini.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '603.bwaves_s'
1590166589.97:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/603.bwaves_s/Spec/object.pm in 0.000260115s
1590166589.97:     Instantiated Spec::Benchmark::bwaves_s603 in 0.000146151s
1590166589.97:     Finding src.alts took 0.000014782s
1590166589.97:   Setting up bwaves_s took 0.000557899s

1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'any_fortran.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_any_c.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpopenmp.bset'
1590166589.97:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '523.xalancbmk_r'
1590166589.98:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/523.xalancbmk_r/Spec/object.pm in 0.000512123s
1590166589.98:     Instantiated Spec::Benchmark::xalancbmk_r523 in 0.000149012s
1590166589.98:     Finding src.alts took 0.000017881s
1590166589.98:   Setting up xalancbmk_r took 0.000811100s

1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_any_fortran.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_any_fortran.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '654.roms_s'
1590166589.98:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/654.roms_s/Spec/object.pm in 0.000499964s
1590166589.98:     Instantiated Spec::Benchmark::roms_s654 in 0.000113010s
1590166589.98:     Finding src.alts took 0.000015020s
1590166589.98:   Setting up roms_s took 0.000782967s

1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'pure_cpp.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_pure_c.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed_cpp.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '549.fotonik3d_r'
1590166589.98:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/549.fotonik3d_r/Spec/object.pm in 0.000227928s
1590166589.98:     Instantiated Spec::Benchmark::fotonik3d_r549 in 0.000115156s
1590166589.98:     Finding src.alts took 0.000015020s
1590166589.98:   Setting up fotonik3d_r took 0.000473022s

1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'any_cpp.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_pure_fortran.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'pure_c.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '625.x264_s'
1590166589.98:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/625.x264_s/Spec/object.pm in 0.000508070s
1590166589.98:     Instantiated Spec::Benchmark::x264_s625 in 0.000127077s
1590166589.98:     Finding src.alts took 0.000016928s
1590166589.98:   Setting up x264_s took 0.000779152s

1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '511.povray_r'
1590166589.98:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/511.povray_r/Spec/object.pm in 0.000307083s
1590166589.98:     Instantiated Spec::Benchmark::povray_r511 in 0.000131130s
1590166589.98:     Finding src.alts took 0.000016928s
1590166589.98:   Setting up povray_r took 0.000567913s

1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed_c.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed_fortran.bset'
1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '600.perlbench_s'
1590166589.98:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/Spec/object.pm in 0.000335217s
1590166589.98:     Instantiated Spec::Benchmark::perlbench_s600 in 0.000118971s
1590166589.98:     Finding src.alts took 0.000016212s
1590166589.98:   Setting up perlbench_s took 0.000588894s

1590166589.98:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate.bset'
1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '531.deepsjeng_r'
1590166589.99:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/531.deepsjeng_r/Spec/object.pm in 0.000190973s
1590166589.99:     Instantiated Spec::Benchmark::deepsjeng_r531 in 0.000109911s
1590166589.99:     Finding src.alts took 0.000013828s
1590166589.99:   Setting up deepsjeng_r took 0.000435829s

1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed_c.bset'
1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '527.cam4_r'
1590166589.99:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/527.cam4_r/Spec/object.pm in 0.002542973s
1590166589.99:     Instantiated Spec::Benchmark::cam4_r527 in 0.000247002s
1590166589.99:     Finding src.alts took 0.000019073s
1590166589.99:   Setting up cam4_r took 0.002954006s

1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_pure_fortran.bset'
1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '520.omnetpp_r'
1590166589.99:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/520.omnetpp_r/Spec/object.pm in 0.000289917s
1590166589.99:     Instantiated Spec::Benchmark::omnetpp_r520 in 0.000122070s
1590166589.99:     Finding src.alts took 0.000016212s
1590166589.99:   Setting up omnetpp_r took 0.000551939s

1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '649.fotonik3d_s'
1590166589.99:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/649.fotonik3d_s/Spec/object.pm in 0.000190973s
1590166589.99:     Instantiated Spec::Benchmark::fotonik3d_s649 in 0.000103951s
1590166589.99:     Finding src.alts took 0.000012875s
1590166589.99:   Setting up fotonik3d_s took 0.000422955s

1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '998.specrand_is'
1590166589.99:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/998.specrand_is/Spec/object.pm in 0.000193119s
1590166589.99:     Instantiated Spec::Benchmark::specrand_is998 in 0.000108957s
1590166589.99:     Finding src.alts took 0.000014067s
1590166589.99:   Setting up specrand_is took 0.000422955s

1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '525.x264_r'
1590166589.99:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/525.x264_r/Spec/object.pm in 0.000576973s
1590166589.99:     Instantiated Spec::Benchmark::x264_r525 in 0.000129223s
1590166589.99:     Finding src.alts took 0.000018120s
1590166589.99:   Setting up x264_r took 0.000847101s

1590166589.99:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed.bset'
1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '510.parest_r'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/510.parest_r/Spec/object.pm in 0.000298977s
1590166590.00:     Instantiated Spec::Benchmark::parest_r510 in 0.000124931s
1590166590.00:     Finding src.alts took 0.000015020s
1590166590.00:   Setting up parest_r took 0.000565052s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'specrate.bset'
1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_any_cpp.bset'
1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '638.imagick_s'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/638.imagick_s/Spec/object.pm in 0.000386000s
1590166590.00:     Instantiated Spec::Benchmark::imagick_s638 in 0.000119925s
1590166590.00:     Finding src.alts took 0.000016928s
1590166590.00:   Setting up imagick_s took 0.000660896s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '619.lbm_s'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/619.lbm_s/Spec/object.pm in 0.000207901s
1590166590.00:     Instantiated Spec::Benchmark::lbm_s619 in 0.000110149s
1590166590.00:     Finding src.alts took 0.000013113s
1590166590.00:   Setting up lbm_s took 0.000442028s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_any_fortran.bset'
1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '541.leela_r'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/541.leela_r/Spec/object.pm in 0.000198841s
1590166590.00:     Instantiated Spec::Benchmark::leela_r541 in 0.000111818s
1590166590.00:     Finding src.alts took 0.000015020s
1590166590.00:   Setting up leela_r took 0.000439882s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '507.cactuBSSN_r'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/507.cactuBSSN_r/Spec/object.pm in 0.000421047s
1590166590.00:     Instantiated Spec::Benchmark::cactuBSSN_r507 in 0.000137091s
1590166590.00:     Finding src.alts took 0.000016928s
1590166590.00:   Setting up cactuBSSN_r took 0.000694990s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '526.blender_r'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/526.blender_r/Spec/object.pm in 0.001128912s
1590166590.00:     Instantiated Spec::Benchmark::blender_r526 in 0.000133991s
1590166590.00:     Finding src.alts took 0.000019073s
1590166590.00:   Setting up blender_r took 0.001413822s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '621.wrf_s'
1590166590.00:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/621.wrf_s/Spec/object.pm in 0.001245022s
1590166590.00:     Instantiated Spec::Benchmark::wrf_s621 in 0.000180006s
1590166590.00:     Finding src.alts took 0.000018835s
1590166590.00:   Setting up wrf_s took 0.001580954s

1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'specspeed.bset'
1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_any_c.bset'
1590166590.00:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '521.wrf_r'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/521.wrf_r/Spec/object.pm in 0.001537085s
1590166590.01:     Instantiated Spec::Benchmark::wrf_r521 in 0.000184059s
1590166590.01:     Finding src.alts took 0.000018835s
1590166590.01:   Setting up wrf_r took 0.001877069s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '628.pop2_s'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/628.pop2_s/Spec/object.pm in 0.001831055s
1590166590.01:     Instantiated Spec::Benchmark::pop2_s628 in 0.000205994s
1590166590.01:     Finding src.alts took 0.000018835s
1590166590.01:   Setting up pop2_s took 0.002193928s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '641.leela_s'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/641.leela_s/Spec/object.pm in 0.000195980s
1590166590.01:     Instantiated Spec::Benchmark::leela_s641 in 0.000141859s
1590166590.01:     Finding src.alts took 0.000013828s
1590166590.01:   Setting up leela_s took 0.000462055s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '623.xalancbmk_s'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/623.xalancbmk_s/Spec/object.pm in 0.000237226s
1590166590.01:     Instantiated Spec::Benchmark::xalancbmk_s623 in 0.000108004s
1590166590.01:     Finding src.alts took 0.000012875s
1590166590.01:   Setting up xalancbmk_s took 0.000467062s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'openmp.bset'
1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_any_cpp.bset'
1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed_fortran.bset'
1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '607.cactuBSSN_s'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/607.cactuBSSN_s/Spec/object.pm in 0.000211000s
1590166590.01:     Instantiated Spec::Benchmark::cactuBSSN_s607 in 0.000121117s
1590166590.01:     Finding src.alts took 0.000013828s
1590166590.01:   Setting up cactuBSSN_s took 0.000464916s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate.bset'
1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '999.specrand_ir'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/999.specrand_ir/Spec/object.pm in 0.000218868s
1590166590.01:     Instantiated Spec::Benchmark::specrand_ir999 in 0.000113010s
1590166590.01:     Finding src.alts took 0.000015020s
1590166590.01:   Setting up specrand_ir took 0.000467062s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '605.mcf_s'
1590166590.01:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/605.mcf_s/Spec/object.pm in 0.000197887s
1590166590.01:     Instantiated Spec::Benchmark::mcf_s605 in 0.000113010s
1590166590.01:     Finding src.alts took 0.000014067s
1590166590.01:   Setting up mcf_s took 0.000440836s

1590166590.01:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'serial.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '503.bwaves_r'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/503.bwaves_r/Spec/object.pm in 0.000233173s
1590166590.02:     Instantiated Spec::Benchmark::bwaves_r503 in 0.000139952s
1590166590.02:     Finding src.alts took 0.000014067s
1590166590.02:   Setting up bwaves_r took 0.000499964s

1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '620.omnetpp_s'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/620.omnetpp_s/Spec/object.pm in 0.000207901s
1590166590.02:     Instantiated Spec::Benchmark::omnetpp_s620 in 0.000115871s
1590166590.02:     Finding src.alts took 0.000014067s
1590166590.02:   Setting up omnetpp_s took 0.000449896s

1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '657.xz_s'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/657.xz_s/Spec/object.pm in 0.000287056s
1590166590.02:     Instantiated Spec::Benchmark::xz_s657 in 0.000108957s
1590166590.02:     Finding src.alts took 0.000013828s
1590166590.02:   Setting up xz_s took 0.000523806s

1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_pure_c.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_any_c.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'pure_fortran.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_pure_fortran.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_any_cpp.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '644.nab_s'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/644.nab_s/Spec/object.pm in 0.000231028s
1590166590.02:     Instantiated Spec::Benchmark::nab_s644 in 0.000113010s
1590166590.02:     Finding src.alts took 0.000015020s
1590166590.02:   Setting up nab_s took 0.000489950s

1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '997.specrand_fr'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/997.specrand_fr/Spec/object.pm in 0.000205040s
1590166590.02:     Instantiated Spec::Benchmark::specrand_fr997 in 0.000121117s
1590166590.02:     Finding src.alts took 0.000013828s
1590166590.02:   Setting up specrand_fr took 0.000456810s

1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'CPU.bset'
1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '544.nab_r'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/544.nab_r/Spec/object.pm in 0.000265121s
1590166590.02:     Instantiated Spec::Benchmark::nab_r544 in 0.000128031s
1590166590.02:     Finding src.alts took 0.000015974s
1590166590.02:   Setting up nab_r took 0.000535965s

1590166590.02:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '602.gcc_s'
1590166590.02:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/602.gcc_s/Spec/object.pm in 0.000271082s
1590166590.02:     Instantiated Spec::Benchmark::gcc_s602 in 0.000107050s
1590166590.02:     Finding src.alts took 0.000013828s
1590166590.02:   Setting up gcc_s took 0.000503063s

1590166590.02: Setting up suite took 0.080206871s
1590166590.02: Reading suite directory for 'Makefile.defaults', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166590.02: Reading suite directory for 'version.txt', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166590.03: found 47 benchmarks in 55 benchsets.
1590166590.03: Reading config file '/home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg'
1590166590.03: NOTICE: Skipping expression evaluation for 'build_ncpus' on line 27 of
1590166590.03:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg
1590166590.03: NOTICE: Skipping expression evaluation for 'version' on line 30 of
1590166590.03:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg
1590166590.03: NOTICE: Expression evaluation for 'gccpath' on line 117 of
1590166590.03:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg succeeded.
1590166590.03:         Expression:     '/usr/'
1590166590.03:         Returned value: ''
1590166590.04: NOTICE: Expression evaluation for 'numxzthreads' on line 187 of
1590166590.04:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg succeeded.
1590166590.04:         Expression:     '1 * 2'
1590166590.04:         Returned value: '2'

1590166590.09:   '600.perlbench_s' added
1590166590.09: 1 configuration selected:

1590166590.09: Action   Benchmarks
1590166590.09: ------   ----------------------------------------------------------------------
1590166590.09: build    600.perlbench_s                                                       
1590166590.09: -------------------------------------------------------------------------------
1590166590.09: 
1590166590.09: Setting up environment for running 600.perlbench_s...
1590166590.09: Setting KMP_AFFINITY = "granularity=fine,compact"
1590166590.09: Setting LD_LIBRARY_PATH = "/home/ucsd/SpectreSandboxing/spec2017/lib/ia32:/home/ucsd/SpectreSandboxing/spec2017/lib/intel64"
1590166590.09: Setting OMP_STACKSIZE = "192M"
1590166590.09: Starting runcpu for 600.perlbench_s...
1590166590.09:    /home/ucsd/SpectreSandboxing/spec2017/bin/specperl /home/ucsd/SpectreSandboxing/spec2017/bin/harness/runcpu --configfile wasm_lucet --action build --define cores=1 --noreportable --nopower --runmode speed --tune base --size refspeed 600.perlbench_s
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]USPEC(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for USPEC in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_CPU(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_CPU in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DNDEBUG(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DNDEBUG in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]UNDEBUG(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for UNDEBUG in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_WINDOWS(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_WINDOWS in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_MEM_IO(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_MEM_IO in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_ILP32(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_ILP32 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_P64(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_P64 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_LP64(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_LP64 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_ILP64(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_ILP64 in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_SUPPRESS_OPENMP(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_SUPPRESS_OPENMP in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_AUTO_SUPPRESS_OPENMP(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_AUTO_SUPPRESS_OPENMP in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_OPENMP(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_OPENMP in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Created default regexp '(?:^|(?<=\s))[-/]DSPEC_NO_AUTO_BYTEORDER(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for DSPEC_NO_AUTO_BYTEORDER in /home/ucsd/SpectreSandboxing/spec2017/benchspec/flags-mandatory.xml
1590166590.45: Reading suite directory for 'flags-mandatory.xml', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166590.45: Reading suite directory for 'CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '557.xz_r'
1590166590.45:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/557.xz_r/Spec/object.pm in 0.001059055s
1590166590.45:     Instantiated Spec::Benchmark::xz_r557 in 0.000249863s
1590166590.45:     Finding src.alts took 0.000025988s
1590166590.45:   Setting up xz_r took 0.001504183s

1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_any_fortran.bset'
1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '508.namd_r'
1590166590.45:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/508.namd_r/Spec/object.pm in 0.000216007s
1590166590.45:     Instantiated Spec::Benchmark::namd_r508 in 0.000138998s
1590166590.45:     Finding src.alts took 0.000018120s
1590166590.45:   Setting up namd_r took 0.000492096s

1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '554.roms_r'
1590166590.45:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/554.roms_r/Spec/object.pm in 0.000829935s
1590166590.45:     Instantiated Spec::Benchmark::roms_r554 in 0.000171900s
1590166590.45:     Finding src.alts took 0.000028133s
1590166590.45:   Setting up roms_r took 0.001165152s

1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_pure_cpp.bset'
1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '996.specrand_fs'
1590166590.45:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/996.specrand_fs/Spec/object.pm in 0.000211954s
1590166590.45:     Instantiated Spec::Benchmark::specrand_fs996 in 0.000123024s
1590166590.45:     Finding src.alts took 0.000015020s
1590166590.45:   Setting up specrand_fs took 0.000465155s

1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_pure_cpp.bset'
1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '500.perlbench_r'
1590166590.45:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/500.perlbench_r/Spec/object.pm in 0.000718832s
1590166590.45:     Instantiated Spec::Benchmark::perlbench_r500 in 0.000150919s
1590166590.45:     Finding src.alts took 0.000018835s
1590166590.45:   Setting up perlbench_r took 0.001019955s

1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_pure_c.bset'
1590166590.45:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '519.lbm_r'
1590166590.46:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/519.lbm_r/Spec/object.pm in 0.000192881s
1590166590.46:     Instantiated Spec::Benchmark::lbm_r519 in 0.000116110s
1590166590.46:     Finding src.alts took 0.000014067s
1590166590.46:   Setting up lbm_r took 0.000433922s

1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed.bset'
1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_any_c.bset'
1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '627.cam4_s'
1590166590.46:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/627.cam4_s/Spec/object.pm in 0.000283957s
1590166590.46:     Instantiated Spec::Benchmark::cam4_s627 in 0.000144958s
1590166590.46:     Finding src.alts took 0.000015974s
1590166590.46:   Setting up cam4_s took 0.000557899s

1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '548.exchange2_r'
1590166590.46:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/548.exchange2_r/Spec/object.pm in 0.000206947s
1590166590.46:     Instantiated Spec::Benchmark::exchange2_r548 in 0.000123024s
1590166590.46:     Finding src.alts took 0.000014067s
1590166590.46:   Setting up exchange2_r took 0.000453949s

1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intopenmp.bset'
1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '505.mcf_r'
1590166590.46:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/505.mcf_r/Spec/object.pm in 0.000209093s
1590166590.46:     Instantiated Spec::Benchmark::mcf_r505 in 0.000118017s
1590166590.46:     Finding src.alts took 0.000012875s
1590166590.46:   Setting up mcf_r took 0.000447035s

1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed_c.bset'
1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '538.imagick_r'
1590166590.46:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/538.imagick_r/Spec/object.pm in 0.000479937s
1590166590.46:     Instantiated Spec::Benchmark::imagick_r538 in 0.000126123s
1590166590.46:     Finding src.alts took 0.000016928s
1590166590.46:   Setting up imagick_r took 0.000746012s

1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_pure_c.bset'
1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_any_cpp.bset'
1590166590.46:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '502.gcc_r'
1590166590.47:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/502.gcc_r/Spec/object.pm in 0.009286880s
1590166590.47:     Instantiated Spec::Benchmark::gcc_r502 in 0.000277042s
1590166590.47:     Finding src.alts took 0.000022888s
1590166590.47:   Setting up gcc_r took 0.009751081s

1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_pure_cpp.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'osdi.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed_cpp.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed_fortran.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_pure_fortran.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed_cpp.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '648.exchange2_s'
1590166590.47:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/648.exchange2_s/Spec/object.pm in 0.000202894s
1590166590.47:     Instantiated Spec::Benchmark::exchange2_s648 in 0.000126123s
1590166590.47:     Finding src.alts took 0.000015974s
1590166590.47:   Setting up exchange2_s took 0.000467062s

1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '631.deepsjeng_s'
1590166590.47:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/631.deepsjeng_s/Spec/object.pm in 0.000174999s
1590166590.47:     Instantiated Spec::Benchmark::deepsjeng_s631 in 0.000108004s
1590166590.47:     Finding src.alts took 0.000011921s
1590166590.47:   Setting up deepsjeng_s took 0.000401020s

1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'any_c.bset'
1590166590.47:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'serial_speed.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mini.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '603.bwaves_s'
1590166590.48:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/603.bwaves_s/Spec/object.pm in 0.000241995s
1590166590.48:     Instantiated Spec::Benchmark::bwaves_s603 in 0.000139952s
1590166590.48:     Finding src.alts took 0.000015974s
1590166590.48:   Setting up bwaves_s took 0.000510931s

1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'any_fortran.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_any_c.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpopenmp.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '523.xalancbmk_r'
1590166590.48:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/523.xalancbmk_r/Spec/object.pm in 0.000512123s
1590166590.48:     Instantiated Spec::Benchmark::xalancbmk_r523 in 0.000146866s
1590166590.48:     Finding src.alts took 0.000018120s
1590166590.48:   Setting up xalancbmk_r took 0.000809193s

1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_any_fortran.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_any_fortran.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '654.roms_s'
1590166590.48:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/654.roms_s/Spec/object.pm in 0.000486851s
1590166590.48:     Instantiated Spec::Benchmark::roms_s654 in 0.000113964s
1590166590.48:     Finding src.alts took 0.000018120s
1590166590.48:   Setting up roms_s took 0.000743151s

1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'pure_cpp.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_pure_c.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed_cpp.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '549.fotonik3d_r'
1590166590.48:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/549.fotonik3d_r/Spec/object.pm in 0.000230074s
1590166590.48:     Instantiated Spec::Benchmark::fotonik3d_r549 in 0.000117064s
1590166590.48:     Finding src.alts took 0.000016212s
1590166590.48:   Setting up fotonik3d_r took 0.000478029s

1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'any_cpp.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_pure_fortran.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'pure_c.bset'
1590166590.48:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '625.x264_s'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/625.x264_s/Spec/object.pm in 0.000512123s
1590166590.49:     Instantiated Spec::Benchmark::x264_s625 in 0.000123978s
1590166590.49:     Finding src.alts took 0.000016928s
1590166590.49:   Setting up x264_s took 0.000782013s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '511.povray_r'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/511.povray_r/Spec/object.pm in 0.000306845s
1590166590.49:     Instantiated Spec::Benchmark::povray_r511 in 0.000137806s
1590166590.49:     Finding src.alts took 0.000016928s
1590166590.49:   Setting up povray_r took 0.000578880s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed_c.bset'
1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_mixed_fortran.bset'
1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '600.perlbench_s'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/Spec/object.pm in 0.000341892s
1590166590.49:     Instantiated Spec::Benchmark::perlbench_s600 in 0.000118017s
1590166590.49:     Finding src.alts took 0.000015020s
1590166590.49:   Setting up perlbench_s took 0.000594139s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate.bset'
1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '531.deepsjeng_r'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/531.deepsjeng_r/Spec/object.pm in 0.000194788s
1590166590.49:     Instantiated Spec::Benchmark::deepsjeng_r531 in 0.000114918s
1590166590.49:     Finding src.alts took 0.000014067s
1590166590.49:   Setting up deepsjeng_r took 0.000440121s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'mixed_c.bset'
1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '527.cam4_r'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/527.cam4_r/Spec/object.pm in 0.002495050s
1590166590.49:     Instantiated Spec::Benchmark::cam4_r527 in 0.000252008s
1590166590.49:     Finding src.alts took 0.000017881s
1590166590.49:   Setting up cam4_r took 0.002906084s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_pure_fortran.bset'
1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '520.omnetpp_r'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/520.omnetpp_r/Spec/object.pm in 0.000280142s
1590166590.49:     Instantiated Spec::Benchmark::omnetpp_r520 in 0.000118971s
1590166590.49:     Finding src.alts took 0.000015974s
1590166590.49:   Setting up omnetpp_r took 0.000535965s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '649.fotonik3d_s'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/649.fotonik3d_s/Spec/object.pm in 0.000180960s
1590166590.49:     Instantiated Spec::Benchmark::fotonik3d_s649 in 0.000108004s
1590166590.49:     Finding src.alts took 0.000013113s
1590166590.49:   Setting up fotonik3d_s took 0.000409126s

1590166590.49:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '998.specrand_is'
1590166590.49:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/998.specrand_is/Spec/object.pm in 0.000205994s
1590166590.50:     Instantiated Spec::Benchmark::specrand_is998 in 0.000112057s
1590166590.50:     Finding src.alts took 0.000013113s
1590166590.50:   Setting up specrand_is took 0.000441074s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '525.x264_r'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/525.x264_r/Spec/object.pm in 0.000540972s
1590166590.50:     Instantiated Spec::Benchmark::x264_r525 in 0.000128984s
1590166590.50:     Finding src.alts took 0.000018835s
1590166590.50:   Setting up x264_r took 0.000818014s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed.bset'
1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '510.parest_r'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/510.parest_r/Spec/object.pm in 0.000286102s
1590166590.50:     Instantiated Spec::Benchmark::parest_r510 in 0.000120878s
1590166590.50:     Finding src.alts took 0.000022888s
1590166590.50:   Setting up parest_r took 0.000550985s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'specrate.bset'
1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_any_cpp.bset'
1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '638.imagick_s'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/638.imagick_s/Spec/object.pm in 0.000394106s
1590166590.50:     Instantiated Spec::Benchmark::imagick_s638 in 0.000116110s
1590166590.50:     Finding src.alts took 0.000015974s
1590166590.50:   Setting up imagick_s took 0.000648975s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '619.lbm_s'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/619.lbm_s/Spec/object.pm in 0.000219107s
1590166590.50:     Instantiated Spec::Benchmark::lbm_s619 in 0.000118017s
1590166590.50:     Finding src.alts took 0.000015020s
1590166590.50:   Setting up lbm_s took 0.000468969s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_any_fortran.bset'
1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '541.leela_r'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/541.leela_r/Spec/object.pm in 0.000196934s
1590166590.50:     Instantiated Spec::Benchmark::leela_r541 in 0.000112057s
1590166590.50:     Finding src.alts took 0.000014067s
1590166590.50:   Setting up leela_r took 0.000433922s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '507.cactuBSSN_r'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/507.cactuBSSN_r/Spec/object.pm in 0.000414848s
1590166590.50:     Instantiated Spec::Benchmark::cactuBSSN_r507 in 0.000145912s
1590166590.50:     Finding src.alts took 0.000017166s
1590166590.50:   Setting up cactuBSSN_r took 0.000710964s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '526.blender_r'
1590166590.50:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/526.blender_r/Spec/object.pm in 0.001116037s
1590166590.50:     Instantiated Spec::Benchmark::blender_r526 in 0.000133991s
1590166590.50:     Finding src.alts took 0.000019073s
1590166590.50:   Setting up blender_r took 0.001396894s

1590166590.50:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '621.wrf_s'
1590166590.51:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/621.wrf_s/Spec/object.pm in 0.001227140s
1590166590.51:     Instantiated Spec::Benchmark::wrf_s621 in 0.000180960s
1590166590.51:     Finding src.alts took 0.000018835s
1590166590.51:   Setting up wrf_s took 0.001554966s

1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'specspeed.bset'
1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_any_c.bset'
1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '521.wrf_r'
1590166590.51:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/521.wrf_r/Spec/object.pm in 0.001500845s
1590166590.51:     Instantiated Spec::Benchmark::wrf_r521 in 0.000174999s
1590166590.51:     Finding src.alts took 0.000020027s
1590166590.51:   Setting up wrf_r took 0.001842022s

1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '628.pop2_s'
1590166590.51:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/628.pop2_s/Spec/object.pm in 0.001847982s
1590166590.51:     Instantiated Spec::Benchmark::pop2_s628 in 0.000208855s
1590166590.51:     Finding src.alts took 0.000018835s
1590166590.51:   Setting up pop2_s took 0.002218962s

1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '641.leela_s'
1590166590.51:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/641.leela_s/Spec/object.pm in 0.000192165s
1590166590.51:     Instantiated Spec::Benchmark::leela_s641 in 0.000110149s
1590166590.51:     Finding src.alts took 0.000013828s
1590166590.51:   Setting up leela_s took 0.000422955s

1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '623.xalancbmk_s'
1590166590.51:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/623.xalancbmk_s/Spec/object.pm in 0.000247002s
1590166590.51:     Instantiated Spec::Benchmark::xalancbmk_s623 in 0.000109196s
1590166590.51:     Finding src.alts took 0.000013828s
1590166590.51:   Setting up xalancbmk_s took 0.000477076s

1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'openmp.bset'
1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_any_cpp.bset'
1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed_fortran.bset'
1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '607.cactuBSSN_s'
1590166590.51:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/607.cactuBSSN_s/Spec/object.pm in 0.000218868s
1590166590.51:     Instantiated Spec::Benchmark::cactuBSSN_s607 in 0.000115871s
1590166590.51:     Finding src.alts took 0.000013828s
1590166590.51:   Setting up cactuBSSN_s took 0.000466824s

1590166590.51:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '999.specrand_ir'
1590166590.52:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/999.specrand_ir/Spec/object.pm in 0.000213861s
1590166590.52:     Instantiated Spec::Benchmark::specrand_ir999 in 0.000122070s
1590166590.52:     Finding src.alts took 0.000014067s
1590166590.52:   Setting up specrand_ir took 0.000472069s

1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '605.mcf_s'
1590166590.52:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/605.mcf_s/Spec/object.pm in 0.000206947s
1590166590.52:     Instantiated Spec::Benchmark::mcf_s605 in 0.000115871s
1590166590.52:     Finding src.alts took 0.000013113s
1590166590.52:   Setting up mcf_s took 0.000444174s

1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'serial.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '503.bwaves_r'
1590166590.52:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/503.bwaves_r/Spec/object.pm in 0.000233889s
1590166590.52:     Instantiated Spec::Benchmark::bwaves_r503 in 0.000138044s
1590166590.52:     Finding src.alts took 0.000015974s
1590166590.52:   Setting up bwaves_r took 0.000503063s

1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '620.omnetpp_s'
1590166590.52:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/620.omnetpp_s/Spec/object.pm in 0.000207901s
1590166590.52:     Instantiated Spec::Benchmark::omnetpp_s620 in 0.000115156s
1590166590.52:     Finding src.alts took 0.000015020s
1590166590.52:   Setting up omnetpp_s took 0.000454187s

1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed_mixed.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '657.xz_s'
1590166590.52:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/657.xz_s/Spec/object.pm in 0.000295162s
1590166590.52:     Instantiated Spec::Benchmark::xz_s657 in 0.000117064s
1590166590.52:     Finding src.alts took 0.000015020s
1590166590.52:   Setting up xz_s took 0.000545025s

1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intrate_pure_c.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_any_c.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fpspeed.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'pure_fortran.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'fprate_pure_fortran.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'intspeed_any_cpp.bset'
1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '644.nab_s'
1590166590.52:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/644.nab_s/Spec/object.pm in 0.000216007s
1590166590.52:     Instantiated Spec::Benchmark::nab_s644 in 0.000113010s
1590166590.52:     Finding src.alts took 0.000014067s
1590166590.52:   Setting up nab_s took 0.000460148s

1590166590.52:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '997.specrand_fr'
1590166590.53:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/997.specrand_fr/Spec/object.pm in 0.000221014s
1590166590.53:     Instantiated Spec::Benchmark::specrand_fr997 in 0.000113010s
1590166590.53:     Finding src.alts took 0.000015020s
1590166590.53:   Setting up specrand_fr took 0.000459909s

1590166590.53:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', 'CPU.bset'
1590166590.53:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '544.nab_r'
1590166590.53:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/544.nab_r/Spec/object.pm in 0.000263214s
1590166590.53:     Instantiated Spec::Benchmark::nab_r544 in 0.000113010s
1590166590.53:     Finding src.alts took 0.000015020s
1590166590.53:   Setting up nab_r took 0.000501871s

1590166590.53:   Reading benchmark directory for '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU', '/home/ucsd/SpectreSandboxing/spec2017/benchspec', '602.gcc_s'
1590166590.53:     Evaluated /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/602.gcc_s/Spec/object.pm in 0.000267029s
1590166590.53:     Instantiated Spec::Benchmark::gcc_s602 in 0.000120163s
1590166590.53:     Finding src.alts took 0.000015020s
1590166590.53:   Setting up gcc_s took 0.000517845s

1590166590.53: Setting up suite took 0.079329014s
1590166590.53: Reading suite directory for 'Makefile.defaults', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'
1590166590.53: Reading suite directory for 'version.txt', '/home/ucsd/SpectreSandboxing/spec2017/benchspec'

1590166590.53: NOTICE: Skipping expression evaluation for 'build_ncpus' on line 27 of
1590166590.53:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg
1590166590.53: NOTICE: Skipping expression evaluation for 'version' on line 30 of
1590166590.53:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg
1590166590.54: NOTICE: Expression evaluation for 'gccpath' on line 117 of
1590166590.54:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg succeeded.
1590166590.54:         Expression:     '/usr/'
1590166590.54:         Returned value: ''
1590166590.54: NOTICE: Expression evaluation for 'numxzthreads' on line 187 of
1590166590.54:         /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg succeeded.
1590166590.54:         Expression:     '1 * 2'
1590166590.54:         Returned value: '2'
1590166590.55: Running "specperl /home/ucsd/SpectreSandboxing/spec2017/bin/sysinfo" to gather system information.
1590166590.65: sysinfo: r5797 of 2017-06-14 (96c45e4568ad54c135fd618bcc091c0f)
1590166590.65: sysinfo: Getting system information for Linux...
1590166590.65: sysinfo: ...getting CPU info
1590166590.65: sysinfo: ...getting info from numactl
1590166590.65: sysinfo: ...getting memory info
1590166590.65: sysinfo: ...getting OS info
1590166590.65: sysinfo: ...getting disk info
1590166590.65: sysinfo: ...trying to get DIMM info from dmidecode
1590166590.79: Retrieving flags file (gcc.xml)...
1590166590.80: Created default regexp '(?:^|(?<=\s))-D_FILE_OFFSET_BITS=64(?=\s|$)' for F-D_FILE_OFFSET_BITS:64 in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fconvert=big-endian(?=\s|$)' for F-fconvert:big-endian in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-ffast-math(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-ffast-math in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-ffixed-form(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-ffixed-form in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fgnu89-inline(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fgnu89-inline in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fno-strict-aliasing(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fno-strict-aliasing in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fno-tree-loop-vectorize(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fno-tree-loop-vectorize in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fno-underscoring(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fno-underscoring in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fno-unsafe-math-optimizations(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fno-unsafe-math-optimizations in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fopenmp(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fopenmp in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fprefetch-loop-arrays(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fprefetch-loop-arrays in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fprofile-generate(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fprofile-generate in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fprofile-use(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fprofile-use in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-fsigned-zeros(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-fsigned-zeros in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-funroll-all-loops(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-funroll-all-loops in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-funroll-loops(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-funroll-loops in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-funsigned-char(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-funsigned-char in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-mavx(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-mavx in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-mfmaf(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-mfmaf in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-mrecip(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-mrecip in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-mvis3(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-mvis3 in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-Ofast(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-Ofast in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-Wall(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-Wall in gcc.xml
1590166590.80: Created default regexp '(?:^|(?<=\s))-Wno-return-type(?:\([^\)]+\))?(?:=\S*)?(?=\s|$)' for F-Wno-return-type in gcc.xml
1590166590.83:   '600.perlbench_s' added
1590166590.87: Verbosity = 5
1590166590.87: Action    = build
1590166590.87: Tune      = base
1590166590.87: Label     = wasm_lucet
1590166590.87: Size      = refspeed
1590166590.87: benchmarks= 600.perlbench_s
1590166590.87: outputs   = txt,cfg,pdf,csv
1590166590.87: username  = ucsd
1590166590.87: Environment settings:
1590166590.87: KMP_AFFINITY = "granularity=fine,compact"
1590166590.87: LD_LIBRARY_PATH = "/home/ucsd/SpectreSandboxing/spec2017/lib/ia32:/home/ucsd/SpectreSandboxing/spec2017/lib/intel64"
1590166590.87: OMP_STACKSIZE = "192M"

1590166590.87: Benchmarks selected: 600.perlbench_s
1590166590.87: When checking executables (/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/exe/perlbench_s_base.wasm_lucet), no checksums were
1590166590.87:   found in the config file.  They will be installed after build.
1590166590.87: build_check('600.perlbench_s base wasm_lucet' (Spec::Benchmark::perlbench_s600=HASH(0x55670f0)), check_exe=1, check_options=0) called at /home/ucsd/SpectreSandboxing/spec2017/bin/harness/benchmark.pm line 315.
1590166590.87: 	Spec::Benchmark::instance(Spec::Benchmark::perlbench_s600=HASH(0x536e300), Spec::Config=HASH(0x4a56470), "base", "refspeed", "wasm_lucet") called at /home/ucsd/SpectreSandboxing/spec2017/bin/harness/runcpu line 670

1590166590.87: When checking executables (/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/exe/perlbench_s_base.wasm_lucet), no checksums were
1590166590.87:   found in the config file.  They will be installed after build.
1590166590.87: build_check('600.perlbench_s base wasm_lucet' (Spec::Benchmark::perlbench_s600=HASH(0x59043a0)), check_exe=1, check_options=0) called at /home/ucsd/SpectreSandboxing/spec2017/bin/harness/benchmark.pm line 315.
1590166590.87: 	Spec::Benchmark::instance(Spec::Benchmark::perlbench_s600=HASH(0x536e300), Spec::Config=HASH(0x4a56470), "base", "refspeed", "wasm_lucet") called at /home/ucsd/SpectreSandboxing/spec2017/bin/harness/runcpu line 758

1590166590.87: Found reftime file in /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/500.perlbench_r/data/refrate
1590166590.87: Found input directory under /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/500.perlbench_r/data/refrate
1590166590.87: Found output directory under /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/500.perlbench_r/data/refrate
1590166590.87: Compiling Binaries
1590166590.87: ------------------------------------------------------------------------
1590166590.88: When checking options for /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/exe/perlbench_s_base.wasm_lucet, no checksums were
1590166590.88:   found in the config file.  They will be installed after build.
1590166590.88: When checking executables (/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/exe/perlbench_s_base.wasm_lucet), no checksums were
1590166590.88:   found in the config file.  They will be installed after build.
1590166590.88: build_check('600.perlbench_s base wasm_lucet' (Spec::Benchmark::perlbench_s600=HASH(0x59043a0)), check_exe=1, check_options=1) called at /home/ucsd/SpectreSandboxing/spec2017/bin/harness/runcpu line 1027.

1590166590.88: Notice: Unusable path detected in build directory list file at
1590166590.88:         /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/build/list
1590166590.88:         The list file references one or more paths which will be
1590166590.88:         ignored because they are not subdirectories of the directory
1590166590.88:         where the list file resides.  This condition may be a result of
1590166590.88:         having moved your SPEC CPU2017 benchmark tree.  If that's what
1590166590.88:         happened, and if you don't need the old build directories, you
1590166590.88:         can just remove them, along with the list file.  (Usually it's
1590166590.88:         safe to delete old build directories, as they are automatically
1590166590.88:         re-created when needed.)
1590166590.88:   Building 600.perlbench_s base wasm_lucet: (build_base_wasm_lucet.0000) [2020-05-22 09:56:30]
1590166590.88:    Using existing directory at '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/build/build_base_wasm_lucet.0000' for 600.perlbench_s base wasm_lucet build
1590166590.91: Wrote to makefile '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/build/build_base_wasm_lucet.0000/Makefile.deps':
1590166590.91: # End dependencies
1590166590.91: # These are the build dependencies
1590166590.91: $(addsuffix $(OBJ), $(basename XSUB.h)): XSUB.h perlapi.h
1590166590.91: $(addsuffix $(OBJ), $(basename av.c)): av.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename config.h)): config.h perl-orig-config.h spec_config.h
1590166590.91: $(addsuffix $(OBJ), $(basename cpan/Digest-SHA/src/sha.c)): cpan/Digest-SHA/src/sha.c cpan/Digest-SHA/src/sha.h cpan/Digest-SHA/src/sha64bit.c cpan/Digest-SHA/src/sha64bit.h
1590166590.91: $(addsuffix $(OBJ), $(basename deb.c)): deb.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename doio.c)): doio.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename doop.c)): doop.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename dump.c)): dump.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h mg_names.inc op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regcharclass.h regcomp.h regexp.h regnodes.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Cwd/Cwd.c)): ext/Cwd/Cwd.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Data/Dumper/Dumper.c)): ext/Data/Dumper/Dumper.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Devel/Peek/Peek.c)): ext/Devel/Peek/Peek.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Digest/MD5/MD5.c)): ext/Digest/MD5/MD5.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Digest/SHA/SHA.c)): ext/Digest/SHA/SHA.c EXTERN.h XSUB.h av.h config.h cop.h cpan/Digest-SHA/src/sha.c cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/File-Glob/Glob.c)): ext/File-Glob/Glob.c av.h config.h cop.h cv.h embed.h embedvar.h ext/File-Glob/const-c.inc form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/IO/IO.c)): ext/IO/IO.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h ext/IO/poll.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/IO/poll.c)): ext/IO/poll.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h ext/IO/poll.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/MIME/Base64/Base64.c)): ext/MIME/Base64/Base64.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Storable/Storable.c)): ext/Storable/Storable.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Sys/Hostname/Hostname.c)): ext/Sys/Hostname/Hostname.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/Time/HiRes/HiRes.c)): ext/Time/HiRes/HiRes.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h ext/Time/HiRes/const-c.inc form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/attrs/attrs.c)): ext/attrs/attrs.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename ext/re/re_comp.c)): ext/re/re_comp.c regcomp.c
1590166590.91: $(addsuffix $(OBJ), $(basename ext/re/re_exec.c)): ext/re/re_exec.c invlist_inline.h
1590166590.91: $(addsuffix $(OBJ), $(basename globals.c)): globals.c INTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename gv.c)): gv.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h overload.inc pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename hv.c)): hv.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename iperlsys.h)): iperlsys.h perlio.h
1590166590.91: $(addsuffix $(OBJ), $(basename locale.c)): locale.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename mg.c)): mg.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename non-core-ext/HTML/Parser/Parser.c)): non-core-ext/HTML/Parser/Parser.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h non-core-ext/HTML/Parser/hctype.h non-core-ext/HTML/Parser/hparser.c non-core-ext/HTML/Parser/hparser.h non-core-ext/HTML/Parser/parser-util.c non-core-ext/HTML/Parser/tokenpos.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename non-core-ext/HTML/Parser/hparser.c)): non-core-ext/HTML/Parser/hparser.c hctype.h tokenpos.h
1590166590.91: $(addsuffix $(OBJ), $(basename numeric.c)): numeric.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename op.c)): op.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h keywords.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pad.c)): pad.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename perl.c)): perl.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename perlapi.c)): perlapi.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename perlhost.h)): perlhost.h iperlsys.h perlio.h vdir.h vmem.h
1590166590.91: $(addsuffix $(OBJ), $(basename perlio.c)): perlio.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perliol.h perlsdio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename perlmain.c)): perlmain.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename perly.c)): perly.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pp.c)): pp.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h keywords.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h reentr.h regexp.h scope.h spec_config.h specrand/specrand.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pp_ctl.c)): pp_ctl.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pp_hot.c)): pp_hot.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pp_pack.c)): pp_pack.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h packsizetables.inc pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pp_sort.c)): pp_sort.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h specrand/specrand.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename pp_sys.c)): pp_sys.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h reentr.h regexp.h scope.h spec_config.h sv.h thread.h time64.c utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename proto.h)): proto.h pp_proto.h
1590166590.91: $(addsuffix $(OBJ), $(basename reentr.c)): reentr.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h reentr.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename regcomp.c)): regcomp.c EXTERN.h INTERN.h av.h config.h cop.h cv.h dquote.c embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h invlist_inline.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regcharclass.h regcomp.h regexp.h regnodes.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename regexec.c)): regexec.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h invlist_inline.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regcharclass.h regcomp.h regexp.h regnodes.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename run.c)): run.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename scope.c)): scope.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename sv.c)): sv.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regcharclass.h regcomp.h regexp.h regnodes.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename taint.c)): taint.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename toke.c)): toke.c EXTERN.h av.h config.h cop.h cv.h dquote.c embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h keywords.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename universal.c)): universal.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perliol.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h vxs.inc warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename utf8.c)): utf8.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h invlist_inline.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename util.c)): util.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h specrand/specrand.h sv.h thread.h utf8.h util.h uudmap.h vutil.c warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename win32/perllib.c)): win32/perllib.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename win32/win32.c)): win32/win32.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h win32/win32iop.h
1590166590.91: $(addsuffix $(OBJ), $(basename win32/win32io.c)): win32/win32io.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perliol.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: $(addsuffix $(OBJ), $(basename win32/win32sck.c)): win32/win32sck.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h win32/win32iop.h
1590166590.91: $(addsuffix $(OBJ), $(basename win32/win32thread.c)): win32/win32thread.c EXTERN.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h win32/win32.h win32/win32iop.h
1590166590.91: $(addsuffix $(OBJ), $(basename xsutils.c)): xsutils.c EXTERN.h XSUB.h av.h config.h cop.h cv.h embed.h embedvar.h form.h gv.h handy.h hv.h intrpvar.h iperlsys.h mg.h op.h opcode.h opnames.h overload.h pad.h parser.h patchlevel.h perl-orig-config.h perl.h perlapi.h perlio.h perlvars.h perly.h pp.h pp_proto.h proto.h regexp.h scope.h spec_config.h sv.h thread.h utf8.h util.h uudmap.h warnings.h
1590166590.91: Wrote to makefile '/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/build/build_base_wasm_lucet.0000/Makefile.spec':
1590166590.91: TUNE=base
1590166590.91: LABEL=wasm_lucet
1590166590.91: NUMBER=600
1590166590.91: NAME=perlbench_s
1590166590.91: SOURCES= av.c caretx.c deb.c doio.c doop.c dump.c globals.c gv.c hv.c \
1590166590.91: 	 keywords.c locale.c mg.c numeric.c op.c pad.c perl.c perlapi.c perlio.c \
1590166590.91: 	 perlmain.c perly.c pp.c pp_ctl.c pp_hot.c pp_pack.c pp_sort.c pp_sys.c \
1590166590.91: 	 regcomp.c regexec.c run.c scope.c sv.c taint.c toke.c universal.c utf8.c \
1590166590.91: 	 util.c reentr.c mro_core.c mathoms.c specrand/specrand.c \
1590166590.91: 	 dist/PathTools/Cwd.c dist/Data-Dumper/Dumper.c ext/Devel-Peek/Peek.c \
1590166590.91: 	 cpan/Digest-MD5/MD5.c cpan/Digest-SHA/SHA.c DynaLoader.c dist/IO/IO.c \
1590166590.91: 	 dist/IO/poll.c cpan/MIME-Base64/Base64.c Opcode.c \
1590166590.91: 	 dist/Storable/Storable.c ext/Sys-Hostname/Hostname.c \
1590166590.91: 	 cpan/Time-HiRes/HiRes.c ext/XS-Typemap/stdio.c \
1590166590.91: 	 ext/attributes/attributes.c cpan/HTML-Parser/Parser.c ext/mro/mro.c \
1590166590.91: 	 ext/re/re.c ext/re/re_comp.c ext/re/re_exec.c ext/arybase/arybase.c \
1590166590.91: 	 ext/PerlIO-scalar/scalar.c ext/PerlIO-via/via.c ext/File-Glob/bsd_glob.c \
1590166590.91: 	 ext/File-Glob/Glob.c ext/Hash-Util/Util.c \
1590166590.91: 	 ext/Hash-Util-FieldHash/FieldHash.c \
1590166590.91: 	 ext/Tie-Hash-NamedCapture/NamedCapture.c \
1590166590.91: 	 cpan/Scalar-List-Utils/ListUtil.c
1590166590.91: EXEBASE=perlbench_s
1590166590.91: NEED_MATH=yes
1590166590.91: BENCHLANG=C
1590166590.91: BENCH_FLAGS      = -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64
1590166590.91: CC               = /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/
1590166590.91: CC_VERSION_OPTION = --version
1590166590.91: COPTIMIZE        = $(FAST_NO_STATIC)  -DSPEC_SUPPRESS_OPENMP
1590166590.91: CXX              = /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -lstdc++ -I/opt/wasi-sdk/lib/clang/10.0.0/include/
1590166590.91: CXXOPTIMIZE      = $(FAST_NO_STATIC) -DSPEC_SUPPRESS_OPENMP
1590166590.91: CXX_VERSION_OPTION = --version
1590166590.91: EXTRA_LDFLAGS    = -Wl,-z,muldefs
1590166590.91: EXTRA_PORTABILITY = -DSPEC_LP64
1590166590.91: FAST             = $(SSE) $(OPT_ROOT) -static
1590166590.91: FAST_NO_STATIC   = $(SSE) $(OPT_ROOT)
1590166590.91: FC               = /bin/gfortran -m64 -I/include -I/usr/include
1590166590.91: FC_VERSION_OPTION = --version
1590166590.91: FOPTIMIZE        = $(FORT_FAST_NO_STATIC)
1590166590.91: FORT_FAST        = $(SSE) $(OPT_ROOT) -static
1590166590.91: FORT_FAST_NO_STATIC = $(SSE) $(OPT_ROOT)
1590166590.91: LUCET_TYPE       = lucet
1590166590.91: OPT_ROOT         = -O2 -fno-strict-aliasing
1590166590.91: OS               = unix
1590166590.91: PORTABILITY      = -DSPEC_LINUX_X64
1590166590.91: SSE              = 
1590166590.91: absolutely_no_locking = 0
1590166590.91: abstol           = 
1590166590.91: action           = build
1590166590.91: allow_label_override = 0
1590166590.91: backup_config    = 1
1590166590.91: baseexe          = perlbench_s
1590166590.91: basepeak         = 0
1590166590.91: bench_post_setup = sync
1590166590.91: benchdir         = benchspec
1590166590.91: benchmark        = 600.perlbench_s
1590166590.91: binary           = 
1590166590.91: bindir           = exe
1590166590.91: builddir         = build
1590166590.91: bundleaction     = 
1590166590.91: bundlename       = 
1590166590.91: calctol          = no
1590166590.91: changedhash      = 0
1590166590.91: check_version    = 0
1590166590.91: clean_between_builds = no
1590166590.91: command_add_redirect = 1
1590166590.91: commanderrfile   = speccmds.err
1590166590.91: commandexe       = perlbench_s_base.wasm_lucet
1590166590.91: commandfile      = speccmds.cmd
1590166590.91: commandoutfile   = speccmds.out
1590166590.91: commandstdoutfile = speccmds.stdout
1590166590.91: comparedir       = compare
1590166590.91: compareerrfile   = compare.err
1590166590.91: comparefile      = compare.cmd
1590166590.91: compareoutfile   = compare.out
1590166590.91: comparestdoutfile = compare.stdout
1590166590.91: compile_error    = 0
1590166590.91: compwhite        = 
1590166590.91: configdir        = config
1590166590.91: configfile       = wasm_lucet
1590166590.91: configpath       = /home/ucsd/SpectreSandboxing/spec2017/config/wasm_lucet.cfg
1590166590.91: copies           = 1
1590166590.91: current_range    = 
1590166590.91: datadir          = data
1590166590.91: default_size     = ref
1590166590.91: default_submit   = $command
1590166590.91: delay            = 0
1590166590.91: deletebinaries   = 0
1590166590.91: deletework       = 0
1590166590.91: dependent_workloads = 0
1590166590.91: device           = 
1590166590.91: difflines        = 10
1590166590.91: dirprot          = 511
1590166590.91: discard_power_samples = 0
1590166590.91: enable_monitor   = 1
1590166590.91: endian           = 12345678
1590166590.91: env_vars         = 0
1590166590.91: expand_notes     = 0
1590166590.91: expid            = 
1590166590.91: exthash_bits     = 256
1590166590.91: fail_build       = 0
1590166590.91: failflags        = 0
1590166590.91: fake             = 0
1590166590.91: feedback         = 1
1590166590.91: flag_url_base    = https://www.spec.org/auto/cpu2017/Docs/benchmarks/flags/
1590166590.91: floatcompare     = yes
1590166590.91: force_monitor    = 0
1590166590.91: from_runcpu      = 2
1590166590.91: hostname         = tigerlake1-ravi
1590166590.91: http_proxy       = 
1590166590.91: http_timeout     = 30
1590166590.91: hw_avail         = 
1590166590.91: hw_cpu_max_mhz   = 
1590166590.91: hw_cpu_name      = Genuine Intel 0000
1590166590.91: hw_cpu_nominal_mhz = 
1590166590.91: hw_disk          = 391 GB  add more disk info here
1590166590.91: hw_memory001     = 15.428 GB fixme: If using DDR3, format is:
1590166590.91: hw_memory002     = 'N GB (M x N GB nRxn PCn-nnnnnR-n, ECC)'
1590166590.91: hw_model         = 
1590166590.91: hw_nchips        = 1
1590166590.91: hw_ncores        = 
1590166590.91: hw_ncpuorder     = 
1590166590.91: hw_nthreadspercore = 
1590166590.91: hw_ocache        = 
1590166590.91: hw_other         = 
1590166590.91: hw_pcache        = 
1590166590.91: hw_scache        = 
1590166590.91: hw_tcache        = 
1590166590.91: hw_vendor        = My Corporation
1590166590.91: idle_current_range = 
1590166590.91: idledelay        = 10
1590166590.91: idleduration     = 60
1590166590.91: ignore_errors    = 0
1590166590.91: ignore_sigint    = 0
1590166590.91: ignorecase       = 
1590166590.91: info_wrap_columns = 50
1590166590.91: inputdir         = input
1590166590.91: inputgenerrfile  = inputgen.err
1590166590.91: inputgenfile     = inputgen.cmd
1590166590.91: inputgenoutfile  = inputgen.out
1590166590.91: inputgenstdoutfile = inputgen.stdout
1590166590.91: iteration        = -1
1590166590.91: iterations       = 3
1590166590.91: keeptmp          = 0
1590166590.91: label            = wasm_lucet
1590166590.91: license_num      = 13
1590166590.91: line_width       = 1020
1590166590.91: link_input_files = 1
1590166590.91: locking          = 1
1590166590.91: log              = CPU2017
1590166590.91: log_line_width   = 1020
1590166590.91: log_timestamp    = 0
1590166590.91: logfile          = /home/ucsd/SpectreSandboxing/spec2017/tmp/CPU2017.074/templogs/preenv.intspeed.074.0
1590166590.91: logname          = /home/ucsd/SpectreSandboxing/spec2017/tmp/CPU2017.074/templogs/preenv.intspeed.074.0
1590166590.91: lognum           = 074.0
1590166590.91: mail_reports     = all
1590166590.91: mailcompress     = 0
1590166590.91: mailmethod       = smtp
1590166590.91: mailport         = 25
1590166590.91: mailserver       = 127.0.0.1
1590166590.91: mailto           = 
1590166590.91: make             = specmake
1590166590.91: make_no_clobber  = 0
1590166590.91: makefile_template = Makefile.YYYtArGeTYYYspec
1590166590.91: makeflags        = -j8
1590166590.91: max_average_uncertainty = 1
1590166590.91: max_hum_limit    = 0
1590166590.91: max_report_runs  = 3
1590166590.91: max_unknown_uncertainty = 1
1590166590.91: mean_anyway      = 1
1590166590.91: meter_connect_timeout = 30
1590166590.91: meter_errors_default = 5
1590166590.91: meter_errors_percentage = 5
1590166590.91: min_report_runs  = 2
1590166590.91: min_temp_limit   = 20
1590166590.91: minimize_builddirs = 0
1590166590.91: minimize_rundirs = 0
1590166590.91: name             = perlbench_s
1590166590.91: nansupport       = no
1590166590.91: need_math        = yes
1590166590.91: no_input_handler = close
1590166590.91: no_monitor       = 
1590166590.91: noratios         = 0
1590166590.91: note_preenv      = 1
1590166590.91: notes_001        =  Binaries compiled on a system with Intel(R) Core(TM) i9-7900X CPU + 32GB RAM
1590166590.91: notes_002        =  memory using Redhat Enterprise Linux 7.5
1590166590.91: notes_200        =  Transparent Huge Pages enabled by default
1590166590.91: notes_os_010     =  Stack size set to unlimited using "ulimit -s unlimited"
1590166590.91: notes_plat_sysinfo_000 =  Sysinfo program /home/ucsd/SpectreSandboxing/spec2017/bin/sysinfo
1590166590.91: notes_plat_sysinfo_005 =  Rev: r5797 of 2017-06-14 96c45e4568ad54c135fd618bcc091c0f
1590166590.91: notes_plat_sysinfo_010 =  running on tigerlake1-ravi Fri May 22 09:56:30 2020
1590166590.91: notes_plat_sysinfo_015 = 
1590166590.91: notes_plat_sysinfo_020 =  SUT (System Under Test) info as seen by some common utilities.
1590166590.91: notes_plat_sysinfo_025 =  For more information on this section, see
1590166590.91: notes_plat_sysinfo_030 =     https://www.spec.org/cpu2017/Docs/config.html\#sysinfo
1590166590.91: notes_plat_sysinfo_035 = 
1590166590.91: notes_plat_sysinfo_040 =  From /proc/cpuinfo
1590166590.91: notes_plat_sysinfo_045 =     model name : Genuine Intel(R) CPU 0000 @ 2.30GHz
1590166590.91: notes_plat_sysinfo_050 =        1  "physical id"s (chips)
1590166590.91: notes_plat_sysinfo_055 =        8 "processors"
1590166590.91: notes_plat_sysinfo_060 =     cores, siblings (Caution: counting these is hw and system dependent. The following
1590166590.91: notes_plat_sysinfo_065 =     excerpts from /proc/cpuinfo might not be reliable.  Use with caution.)
1590166590.91: notes_plat_sysinfo_070 =        cpu cores : 4
1590166590.91: notes_plat_sysinfo_075 =        siblings  : 8
1590166590.91: notes_plat_sysinfo_080 =        physical 0: cores 0 1 2 3
1590166590.91: notes_plat_sysinfo_085 = 
1590166590.91: notes_plat_sysinfo_090 =  From lscpu:
1590166590.91: notes_plat_sysinfo_095 =       Architecture:                    x86_64
1590166590.91: notes_plat_sysinfo_100 =       CPU op-mode(s):                  32-bit, 64-bit
1590166590.91: notes_plat_sysinfo_105 =       Byte Order:                      Little Endian
1590166590.91: notes_plat_sysinfo_110 =       Address sizes:                   39 bits physical, 48 bits virtual
1590166590.91: notes_plat_sysinfo_115 =       CPU(s):                          8
1590166590.91: notes_plat_sysinfo_120 =       On-line CPU(s) list:             0-7
1590166590.91: notes_plat_sysinfo_125 =       Thread(s) per core:              2
1590166590.91: notes_plat_sysinfo_130 =       Core(s) per socket:              4
1590166590.91: notes_plat_sysinfo_135 =       Socket(s):                       1
1590166590.91: notes_plat_sysinfo_140 =       NUMA node(s):                    1
1590166590.91: notes_plat_sysinfo_145 =       Vendor ID:                       GenuineIntel
1590166590.91: notes_plat_sysinfo_150 =       CPU family:                      6
1590166590.91: notes_plat_sysinfo_155 =       Model:                           140
1590166590.91: notes_plat_sysinfo_160 =       Model name:                      Genuine Intel(R) CPU 0000 @ 2.30GHz
1590166590.91: notes_plat_sysinfo_165 =       Stepping:                        0
1590166590.91: notes_plat_sysinfo_170 =       CPU MHz:                         1767.802
1590166590.91: notes_plat_sysinfo_175 =       CPU max MHz:                     4200.0000
1590166590.91: notes_plat_sysinfo_180 =       CPU min MHz:                     400.0000
1590166590.91: notes_plat_sysinfo_185 =       BogoMIPS:                        4608.00
1590166590.91: notes_plat_sysinfo_190 =       Virtualization:                  VT-x
1590166590.91: notes_plat_sysinfo_195 =       L1d cache:                       192 KiB
1590166590.91: notes_plat_sysinfo_200 =       L1i cache:                       128 KiB
1590166590.91: notes_plat_sysinfo_205 =       L2 cache:                        5 MiB
1590166590.91: notes_plat_sysinfo_210 =       L3 cache:                        12 MiB
1590166590.91: notes_plat_sysinfo_215 =       NUMA node0 CPU(s):               0-7
1590166590.91: notes_plat_sysinfo_220 =       Vulnerability Itlb multihit:     KVM: Mitigation: Split huge pages
1590166590.91: notes_plat_sysinfo_225 =       Vulnerability L1tf:              Not affected
1590166590.91: notes_plat_sysinfo_230 =       Vulnerability Mds:               Vulnerable: Clear CPU buffers attempted, no
1590166590.91: notes_plat_sysinfo_235 =       microcode; SMT vulnerable
1590166590.91: notes_plat_sysinfo_240 =       Vulnerability Meltdown:          Not affected
1590166590.91: notes_plat_sysinfo_245 =       Vulnerability Spec store bypass: Mitigation; Speculative Store Bypass disabled via
1590166590.91: notes_plat_sysinfo_250 =       prctl and seccomp
1590166590.91: notes_plat_sysinfo_255 =       Vulnerability Spectre v1:        Mitigation; usercopy/swapgs barriers and __user
1590166590.91: notes_plat_sysinfo_260 =       pointer sanitization
1590166590.91: notes_plat_sysinfo_265 =       Vulnerability Spectre v2:        Mitigation; Enhanced IBRS, IBPB conditional, RSB
1590166590.91: notes_plat_sysinfo_270 =       filling
1590166590.91: notes_plat_sysinfo_275 =       Vulnerability Tsx async abort:   Not affected
1590166590.91: notes_plat_sysinfo_280 =       Flags:                           fpu vme de pse tsc msr pae mce cx8 apic sep mtrr
1590166590.91: notes_plat_sysinfo_285 =       pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx
1590166590.91: notes_plat_sysinfo_290 =       pdpe1gb rdtscp lm constant_tsc art arch_perfmon pebs bts rep_good nopl xtopology
1590166590.91: notes_plat_sysinfo_295 =       nonstop_tsc cpuid aperfmperf tsc_known_freq pni pclmulqdq dtes64 monitor ds_cpl vmx
1590166590.91: notes_plat_sysinfo_300 =       smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt
1590166590.91: notes_plat_sysinfo_305 =       tsc_deadline_timer aes xsave avx f16c rdrand lahf_lm abm 3dnowprefetch cpuid_fault
1590166590.91: notes_plat_sysinfo_310 =       epb invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi flexpriority
1590166590.91: notes_plat_sysinfo_315 =       ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid avx512f
1590166590.91: notes_plat_sysinfo_320 =       avx512dq rdseed adx smap avx512ifma clflushopt clwb intel_pt avx512cd sha_ni
1590166590.91: notes_plat_sysinfo_325 =       avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves dtherm ida arat pln pts hwp
1590166590.91: notes_plat_sysinfo_330 =       hwp_notify hwp_act_window hwp_epp hwp_pkg_req avx512vbmi umip pku ospke avx512_vbmi2
1590166590.91: notes_plat_sysinfo_335 =       shstk gfni vaes vpclmulqdq avx512_vnni avx512_bitalg tme avx512_vpopcntdq rdpid
1590166590.91: notes_plat_sysinfo_340 =       movdiri movdir64b fsrm avx512_vp2intersect ibt flush_l1d arch_capabilities
1590166590.91: notes_plat_sysinfo_345 = 
1590166590.91: notes_plat_sysinfo_350 =  /proc/cpuinfo cache data
1590166590.91: notes_plat_sysinfo_355 =     cache size : 12288 KB
1590166590.91: notes_plat_sysinfo_360 = 
1590166590.91: notes_plat_sysinfo_365 =  From numactl --hardware  WARNING: a numactl 'node' might or might not correspond to a
1590166590.91: notes_plat_sysinfo_370 =  physical chip.
1590166590.91: notes_plat_sysinfo_375 = 
1590166590.91: notes_plat_sysinfo_380 =  From /proc/meminfo
1590166590.91: notes_plat_sysinfo_385 =     MemTotal:       16177588 kB
1590166590.91: notes_plat_sysinfo_390 =     HugePages_Total:       0
1590166590.91: notes_plat_sysinfo_395 =     Hugepagesize:       2048 kB
1590166590.91: notes_plat_sysinfo_400 = 
1590166590.91: notes_plat_sysinfo_405 =  From /etc/*release* /etc/*version*
1590166590.91: notes_plat_sysinfo_410 =     fedora-release: Fedora release 32 (Thirty Two)
1590166590.91: notes_plat_sysinfo_415 =     os-release:
1590166590.91: notes_plat_sysinfo_420 =        NAME=Fedora
1590166590.91: notes_plat_sysinfo_425 =        VERSION="32 (Workstation Edition)"
1590166590.91: notes_plat_sysinfo_430 =        ID=fedora
1590166590.91: notes_plat_sysinfo_435 =        VERSION_ID=32
1590166590.91: notes_plat_sysinfo_440 =        VERSION_CODENAME=""
1590166590.91: notes_plat_sysinfo_445 =        PLATFORM_ID="platform:f32"
1590166590.91: notes_plat_sysinfo_450 =        PRETTY_NAME="Fedora 32 (Workstation Edition)"
1590166590.91: notes_plat_sysinfo_455 =        ANSI_COLOR="0;34"
1590166590.91: notes_plat_sysinfo_460 =     redhat-release: Fedora release 32 (Thirty Two)
1590166590.91: notes_plat_sysinfo_465 =     system-release: Fedora release 32 (Thirty Two)
1590166590.91: notes_plat_sysinfo_470 =     system-release-cpe: cpe:/o:fedoraproject:fedora:32
1590166590.91: notes_plat_sysinfo_475 = 
1590166590.91: notes_plat_sysinfo_480 =  uname -a:
1590166590.91: notes_plat_sysinfo_485 =     Linux tigerlake1-ravi 5.7.0-0.rc6.1.1.cet.fc32.x86_64 \#1 SMP Mon May 18 17:21:34 PDT
1590166590.91: notes_plat_sysinfo_490 =     2020 x86_64 x86_64 x86_64 GNU/Linux
1590166590.91: notes_plat_sysinfo_495 = 
1590166590.91: notes_plat_sysinfo_500 =  run-level 3 May 21 18:49
1590166590.91: notes_plat_sysinfo_505 = 
1590166590.91: notes_plat_sysinfo_510 =  SPEC is set to: /home/ucsd/SpectreSandboxing/spec2017
1590166590.91: notes_plat_sysinfo_515 =     Filesystem                              Type  Size  Used Avail Use% Mounted on
1590166590.91: notes_plat_sysinfo_520 =     /dev/mapper/fedora_localhost--live-home ext4  391G  115G  256G  31% /home
1590166590.91: notes_plat_sysinfo_525 = 
1590166590.91: notes_plat_sysinfo_530 =  Additional information from dmidecode follows.  WARNING: Use caution when you interpret
1590166590.91: notes_plat_sysinfo_535 =  this section. The 'dmidecode' program reads system data which is "intended to allow
1590166590.91: notes_plat_sysinfo_540 =  hardware to be accurately determined", but the intent may not be met, as there are
1590166590.91: notes_plat_sysinfo_545 =  frequent changes to hardware, firmware, and the "DMTF SMBIOS" standard.
1590166590.91: notes_plat_sysinfo_550 = 
1590166590.91: notes_plat_sysinfo_555 =  (End of data from sysinfo program)
1590166590.91: notes_wrap_columns = 0
1590166590.91: notes_wrap_indent =   
1590166590.91: num              = 600
1590166590.91: obiwan           = 
1590166590.91: os_exe_ext       = 
1590166590.91: output_format    = txt,cfg,pdf,csv
1590166590.91: output_root      = 
1590166590.91: outputdir        = output
1590166590.91: parallel_test    = 1
1590166590.91: parallel_test_submit = 0
1590166590.91: parallel_test_workloads = 
1590166590.91: path             = /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s
1590166590.91: plain_train      = 1
1590166590.91: platform         = 
1590166590.91: power            = 0
1590166590.91: preENV_KMP_AFFINITY = granularity=fine,compact
1590166590.91: preENV_LD_LIBRARY_PATH = /home/ucsd/SpectreSandboxing/spec2017/lib/ia32:/home/ucsd/SpectreSandboxing/spec2017/lib/intel64
1590166590.91: preENV_OMP_STACKSIZE = 192M
1590166590.91: preenv           = 0
1590166590.91: prefix           = 
1590166590.91: prepared_by      = Intel Corporation
1590166590.91: ranks            = 1
1590166590.91: rawhash_bits     = 256
1590166590.91: rebuild          = 0
1590166590.91: reftime          = reftime
1590166590.91: reltol           = 
1590166590.91: reportable       = 0
1590166590.91: resultdir        = result
1590166590.91: review           = 0
1590166590.91: run              = all
1590166590.91: runcpu           = /home/ucsd/SpectreSandboxing/spec2017/bin/harness/runcpu --configfile wasm_lucet --action build --define cores=1 --noreportable --nopower --runmode speed --tune base --size refspeed 600.perlbench_s --nopreenv --note-preenv --logfile /home/ucsd/SpectreSandboxing/spec2017/tmp/CPU2017.074/templogs/preenv.intspeed.074.0 --lognum 074.0 --from_runcpu 2
1590166590.91: rundir           = run
1590166590.91: runmode          = speed
1590166590.91: safe_eval        = 1
1590166590.91: save_build_files = 
1590166590.91: section_specifier_fatal = 1
1590166590.91: setprocgroup     = 1
1590166590.91: setup_error      = 0
1590166590.91: sigint           = 2
1590166590.91: size             = refspeed
1590166590.91: size_class       = ref
1590166590.91: skipabstol       = 
1590166590.91: skipobiwan       = 
1590166590.91: skipreltol       = 
1590166590.91: skiptol          = 
1590166590.91: smarttune        = base
1590166590.91: specdiff         = specdiff
1590166590.91: specrun          = specinvoke
1590166590.91: srcalt           = 
1590166590.91: srcdir           = src
1590166590.91: srcsource        = /home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/500.perlbench_r/src
1590166590.91: stagger          = 10
1590166590.91: strict_rundir_verify = 0
1590166590.91: sw_avail         = Sep-2017
1590166590.91: sw_base_ptrsize  = 64-bit
1590166590.91: sw_compiler001   = C/C++: Version 8.1.0 of GNU C/C++
1590166590.91: sw_compiler002   = Compiler for Linux;
1590166590.91: sw_compiler003   = Fortran: Version 8.1.0 of GNU Fortran
1590166590.91: sw_compiler004   = Compiler for Linux
1590166590.91: sw_file          = ext4
1590166590.91: sw_os001         = Fedora release 32 (Thirty Two)
1590166590.91: sw_os002         = 5.7.0-0.rc6.1.1.cet.fc32.x86_64
1590166590.91: sw_state         = Run level 3 (add definition here)
1590166590.91: sysinfo_hash_bits = 256
1590166590.91: sysinfo_program  = specperl /home/ucsd/SpectreSandboxing/spec2017/bin/sysinfo
1590166590.91: sysinfo_program_hash = sysinfo:SHA:ecd2bef08f316af97f5a7768b641e2a3307c1b4b68efb5a57fa76367d790d233
1590166590.91: table            = 1
1590166590.91: teeout           = 0
1590166590.91: test_date        = May-2020
1590166590.91: test_sponsor     = Intel Corporation
1590166590.91: tester           = Intel Corporation
1590166590.91: threads          = 1
1590166590.91: top              = /home/ucsd/SpectreSandboxing/spec2017
1590166590.91: train_single_thread = 0
1590166590.91: train_with       = train
1590166590.91: tune             = base
1590166590.91: uid              = 1004
1590166590.91: unbuffer         = 1
1590166590.91: uncertainty_exception = 5
1590166590.91: update           = 0
1590166590.91: update_url       = http://www.spec.org/auto/cpu2017/updates/
1590166590.91: use_submit_for_compare = 0
1590166590.91: use_submit_for_speed = 0
1590166590.91: username         = ucsd
1590166590.91: verbose          = 5
1590166590.91: verify_binaries  = 1
1590166590.91: version          = 0.906000
1590166590.91: version_url      = http://www.spec.org/auto/cpu2017/current_version
1590166590.91: voltage_range    = 
1590166590.91: worklist         = list
1590166590.91: OUTPUT_RMFILES   = diffmail.2.550.15.24.23.100.out perfect.b.3.out scrabbl.out splitmail.535.13.25.24.1091.1.out suns.out validate
1590166590.91:   Compile for '600.perlbench_s' started at: 2020-05-22 09:56:30 (1590166590)
1590166590.92: Issuing make.clean command 'specmake --output-sync -j8 clean'
1590166590.92: Start make.clean command: 2020-05-22 09:56:30 (1590166590.91645)
1590166591.02: rm -rf *.o  diffmail.2.550.15.24.23.100.out perfect.b.3.out scrabbl.out splitmail.535.13.25.24.1091.1.out suns.out validate
1590166591.02: find . \( -name \*.o -o -name '*.fppized.f*' -o -name '*.i' -o -name '*.mod' \) -print | xargs rm -rf
1590166591.02: rm -rf perlbench_s
1590166591.02: rm -rf perlbench_s.exe
1590166591.02: rm -rf core
1590166591.08: Stop make.clean command: 2020-05-22 09:56:31 (1590166591.0789)
1590166591.08: Elapsed time for make.clean command: 00:00:00 (0.162449836730957)
1590166591.08: Issuing make command 'specmake --output-sync -j8 build'
1590166591.08: Start make command: 2020-05-22 09:56:31 (1590166591.08041)
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o caretx.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  caretx.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from caretx.c:32:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from caretx.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from caretx.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from caretx.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from caretx.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from caretx.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from caretx.c:32:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from caretx.c:32:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from caretx.c:32:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: 77 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: caretx.o] Error 1
1590166591.29: specmake: *** Waiting for unfinished jobs....
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o deb.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  deb.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from deb.c:25:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from deb.c:25:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from deb.c:25:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from deb.c:25:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from deb.c:25:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from deb.c:25:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from deb.c:25:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from deb.c:25:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from deb.c:25:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: 77 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: deb.o] Error 1
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o av.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  av.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from av.c:24:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from av.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from av.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from av.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from av.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from av.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from av.c:24:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from av.c:24:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from av.c:24:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: 77 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: av.o] Error 1
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o globals.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  globals.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from globals.c:32:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from globals.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from globals.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from globals.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from globals.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from globals.c:32:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from globals.c:32:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from globals.c:32:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from globals.c:32:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: 77 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: globals.o] Error 1
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o doop.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  doop.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from doop.c:24:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from doop.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doop.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doop.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doop.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doop.c:24:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from doop.c:24:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from doop.c:24:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from doop.c:24:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: doop.c:817:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         (UV) s[uoffset     ] << 56;
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:820:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset    ] << 56) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:821:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 1] << 48);
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:824:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset    ] << 56) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:825:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 1] << 48) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:826:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 2] << 40);
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:829:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset    ] << 56) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:830:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 1] << 48) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:831:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 2] << 40) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:832:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 3] << 32);
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:835:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset    ] << 56) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:836:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 1] << 48) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:837:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 2] << 40) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:838:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 3] << 32) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:842:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset    ] << 56) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:843:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 1] << 48) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:844:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 2] << 40) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:845:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 3] << 32) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:850:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset    ] << 56) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:851:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 1] << 48) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:852:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 2] << 40) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:853:25: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                         ((UV) s[uoffset + 3] << 32) +
1590166591.29:                                              ^  ~~
1590166591.29: doop.c:881:24: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                 ((UV) s[uoffset    ] << 56) +
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:882:24: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                 ((UV) s[uoffset + 1] << 48) +
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:883:24: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                 ((UV) s[uoffset + 2] << 40) +
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:884:24: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:                 ((UV) s[uoffset + 3] << 32) +
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:972:31: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:             s[offset  ] = (U8)((lval >> 56) & 0xff);
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:973:31: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:             s[offset+1] = (U8)((lval >> 48) & 0xff);
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:974:31: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:             s[offset+2] = (U8)((lval >> 40) & 0xff);
1590166591.29:                                      ^  ~~
1590166591.29: doop.c:975:31: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:             s[offset+3] = (U8)((lval >> 32) & 0xff);
1590166591.29:                                      ^  ~~
1590166591.29: 107 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: doop.o] Error 1
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o doio.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  doio.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from doio.c:27:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from doio.c:27:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doio.c:27:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doio.c:27:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doio.c:27:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from doio.c:27:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from doio.c:27:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from doio.c:27:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from doio.c:27:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: doio.c:451:41: warning: implicit declaration of function 'dup' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:                             wanted_fd = PerlLIO_dup(wanted_fd);
1590166591.29:                                         ^
1590166591.29: ./iperlsys.h:746:27: note: expanded from macro 'PerlLIO_dup'
1590166591.29: #define PerlLIO_dup(fd)                 dup((fd))
1590166591.29:                                         ^
1590166591.29: doio.c:703:24: warning: implicit declaration of function 'dup2' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:             } else if (PerlLIO_dup2(fd, savefd) < 0) {
1590166591.29:                        ^
1590166591.29: ./iperlsys.h:747:33: note: expanded from macro 'PerlLIO_dup2'
1590166591.29: #define PerlLIO_dup2(fd1, fd2)          dup2((fd1), (fd2))
1590166591.29:                                         ^
1590166591.29: doio.c:739:40: warning: implicit declaration of function 'dup' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:                 int dupfd = ofd >= 0 ? PerlLIO_dup(ofd) : -1;
1590166591.29:                                        ^
1590166591.29: ./iperlsys.h:746:27: note: expanded from macro 'PerlLIO_dup'
1590166591.29: #define PerlLIO_dup(fd)                 dup((fd))
1590166591.29:                                         ^
1590166591.29: doio.c:827:8: warning: implicit declaration of function 'chmod' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:         (void)PerlLIO_chmod(PL_oldname,PL_filemode);
1590166591.29:               ^
1590166591.29: ./iperlsys.h:736:35: note: expanded from macro 'PerlLIO_chmod'
1590166591.29: #define PerlLIO_chmod(file, mode)       chmod((file), (mode))
1590166591.29:                                         ^
1590166591.29: doio.c:980:27: warning: implicit declaration of function 'chmod' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:                     (void)PerlLIO_chmod(PL_oldname,PL_filemode);
1590166591.29:                           ^
1590166591.29: ./iperlsys.h:736:35: note: expanded from macro 'PerlLIO_chmod'
1590166591.29: #define PerlLIO_chmod(file, mode)       chmod((file), (mode))
1590166591.29:                                         ^
1590166591.29: doio.c:1563:6: warning: implicit declaration of function 'execvp' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:             PerlProc_execvp(tmps,EXEC_ARGV_CAST(PL_Argv));
1590166591.29:             ^
1590166591.29: ./iperlsys.h:1098:31: note: expanded from macro 'PerlProc_execvp'
1590166591.29: #define PerlProc_execvp(c, a)   execvp((c), (a))
1590166591.29:                                 ^
1590166591.29: doio.c:1630:5: warning: implicit declaration of function 'execl' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:                   PerlProc_execl(PL_cshname, "csh", flags, ncmd, (char*)NULL);
1590166591.29:                   ^
1590166591.29: ./iperlsys.h:1096:2: note: expanded from macro 'PerlProc_execl'
1590166591.29:         execl((c), (w), (x), (y), (z))
1590166591.29:         ^
1590166591.29: doio.c:1672:15: warning: implicit declaration of function 'dup2' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:                 if (!*t && (PerlLIO_dup2(1,2) != -1)) {
1590166591.29:                             ^
1590166591.29: ./iperlsys.h:747:33: note: expanded from macro 'PerlLIO_dup2'
1590166591.29: #define PerlLIO_dup2(fd1, fd2)          dup2((fd1), (fd2))
1590166591.29:                                         ^
1590166591.29: doio.c:1679:6: warning: implicit declaration of function 'execl' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:             PerlProc_execl(PL_sh_path, "sh", "-c", cmd, (char *)NULL);
1590166591.29:             ^
1590166591.29: ./iperlsys.h:1096:2: note: expanded from macro 'PerlProc_execl'
1590166591.29:         execl((c), (w), (x), (y), (z))
1590166591.29:         ^
1590166591.29: doio.c:1703:2: warning: implicit declaration of function 'execvp' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:         PerlProc_execvp(PL_Argv[0],EXEC_ARGV_CAST(PL_Argv));
1590166591.29:         ^
1590166591.29: ./iperlsys.h:1098:31: note: expanded from macro 'PerlProc_execvp'
1590166591.29: #define PerlProc_execvp(c, a)   execvp((c), (a))
1590166591.29:                                 ^
1590166591.29: doio.c:1797:25: warning: implicit declaration of function 'chmod' is invalid in C99 [-Wimplicit-function-declaration]
1590166591.29:                         PerlLIO_chmod(name, val)) {
1590166591.29:                         ^
1590166591.29: ./iperlsys.h:736:35: note: expanded from macro 'PerlLIO_chmod'
1590166591.29: #define PerlLIO_chmod(file, mode)       chmod((file), (mode))
1590166591.29:                                         ^
1590166591.29: 88 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: doio.o] Error 1
1590166591.29: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o dump.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  dump.c
1590166591.29: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.29: In file included from dump.c:29:
1590166591.29: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.29: # undef __has_builtin
1590166591.29:         ^
1590166591.29: In file included from dump.c:29:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.29:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:24:1: note: expanded from here
1590166591.29: 0x736f6d6570736575ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from dump.c:29:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.29:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:25:1: note: expanded from here
1590166591.29: 0x646f72616e646f6dULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from dump.c:29:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.29:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:26:1: note: expanded from here
1590166591.29: 0x6c7967656e657261ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from dump.c:29:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.29:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.29:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.29: #define UINT64_C(c) c ## ULL
1590166591.29:                     ^~~~~~~~
1590166591.29: <scratch space>:27:1: note: expanded from here
1590166591.29: 0x7465646279746573ULL
1590166591.29: ^~~~~~~~~~~~~~~~~~~~~
1590166591.29: In file included from dump.c:29:
1590166591.29: In file included from ./perl.h:3780:
1590166591.29: In file included from ./hv.h:629:
1590166591.29: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.29:                              ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     m = U8TO64_LE( in );
1590166591.29:         ^~~~~~~~~~~~~~~
1590166591.29: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.29:    ((U64TYPE)((p)[7]) << 56))
1590166591.29:                       ^  ~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:     SIPROUND;
1590166591.29:     ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.29:                                       ^  ~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                  ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^         ~~
1590166591.29: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                       ^  ~
1590166591.29: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.29:   SIPROUND;
1590166591.29:   ^~~~~~~~
1590166591.29: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.29:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.29:                                              ^~~~~~~~~~~~~
1590166591.29: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.29:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.29:                                                           ^  ~~~~~~~~
1590166591.29: In file included from dump.c:29:
1590166591.29: In file included from ./perl.h:3781:
1590166591.29: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.29:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.29:     ^
1590166591.29: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.29: #define Sigjmp_buf sigjmp_buf
1590166591.29:                    ^
1590166591.29: In file included from dump.c:29:
1590166591.29: ./perl.h:4441:7: error: expected identifier or '('
1590166591.29: Off_t lseek (int,Off_t,int);
1590166591.29:       ^
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: In file included from dump.c:29:
1590166591.29: ./perl.h:4441:7: error: expected ')'
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:    ^
1590166591.29: ./perl.h:4441:7: note: to match this '('
1590166591.29: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.29:   ({                                   \
1590166591.29:   ^
1590166591.29: 77 warnings and 3 errors generated.
1590166591.29: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: dump.o] Error 1
1590166591.30: /opt/wasi-sdk/bin/clang --sysroot /opt/wasi-sdk/share/wasi-sysroot -Wl,--export-all -I/opt/wasi-sdk/lib/clang/10.0.0/include/ -c -o gv.o -DSPEC -DNDEBUG -DPERL_CORE -I. -Idist/IO -Icpan/Time-HiRes -Icpan/HTML-Parser -Iext/re -Ispecrand -DDOUBLE_SLASHES_SPECIAL=0 -D_LARGE_FILES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64    -O2 -fno-strict-aliasing  -DSPEC_SUPPRESS_OPENMP       -DSPEC_LINUX_X64       -DSPEC_LP64  gv.c
1590166591.30: clang-10: warning: -Wl,--export-all: 'linker' input unused [-Wunused-command-line-argument]
1590166591.30: In file included from gv.c:36:
1590166591.30: ./perl.h:3621:9: warning: undefining builtin macro [-Wbuiltin-macro-redefined]
1590166591.30: # undef __has_builtin
1590166591.30:         ^
1590166591.30: In file included from gv.c:36:
1590166591.30: In file included from ./perl.h:3780:
1590166591.30: In file included from ./hv.h:629:
1590166591.30: ./hv_func.h:207:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8317987319222330741 to 1886610805 [-Wconstant-conversion]
1590166591.30:   U64TYPE v0 = UINT64_C(0x736f6d6570736575);
1590166591.30:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.30: #define UINT64_C(c) c ## ULL
1590166591.30:                     ^~~~~~~~
1590166591.30: <scratch space>:24:1: note: expanded from here
1590166591.30: 0x736f6d6570736575ULL
1590166591.30: ^~~~~~~~~~~~~~~~~~~~~
1590166591.30: In file included from gv.c:36:
1590166591.30: In file included from ./perl.h:3780:
1590166591.30: In file included from ./hv.h:629:
1590166591.30: ./hv_func.h:208:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7237128888997146477 to 1852075885 [-Wconstant-conversion]
1590166591.30:   U64TYPE v1 = UINT64_C(0x646f72616e646f6d);
1590166591.30:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.30: #define UINT64_C(c) c ## ULL
1590166591.30:                     ^~~~~~~~
1590166591.30: <scratch space>:25:1: note: expanded from here
1590166591.30: 0x646f72616e646f6dULL
1590166591.30: ^~~~~~~~~~~~~~~~~~~~~
1590166591.30: In file included from gv.c:36:
1590166591.30: In file included from ./perl.h:3780:
1590166591.30: In file included from ./hv.h:629:
1590166591.30: ./hv_func.h:209:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 7816392313619706465 to 1852142177 [-Wconstant-conversion]
1590166591.30:   U64TYPE v2 = UINT64_C(0x6c7967656e657261);
1590166591.30:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.30: #define UINT64_C(c) c ## ULL
1590166591.30:                     ^~~~~~~~
1590166591.30: <scratch space>:26:1: note: expanded from here
1590166591.30: 0x6c7967656e657261ULL
1590166591.30: ^~~~~~~~~~~~~~~~~~~~~
1590166591.30: In file included from gv.c:36:
1590166591.30: In file included from ./perl.h:3780:
1590166591.30: In file included from ./hv.h:629:
1590166591.30: ./hv_func.h:210:16: warning: implicit conversion from 'unsigned long long' to 'unsigned long' changes value from 8387220255154660723 to 2037671283 [-Wconstant-conversion]
1590166591.30:   U64TYPE v3 = UINT64_C(0x7465646279746573);
1590166591.30:           ~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/stdint.h:112:21: note: expanded from macro 'UINT64_C'
1590166591.30: #define UINT64_C(c) c ## ULL
1590166591.30:                     ^~~~~~~~
1590166591.30: <scratch space>:27:1: note: expanded from here
1590166591.30: 0x7465646279746573ULL
1590166591.30: ^~~~~~~~~~~~~~~~~~~~~
1590166591.30: In file included from gv.c:36:
1590166591.30: In file included from ./perl.h:3780:
1590166591.30: In file included from ./hv.h:629:
1590166591.30: ./hv_func.h:219:30: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   b = ( ( U64TYPE )(inlen) ) << 56;
1590166591.30:                              ^  ~~
1590166591.30: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     m = U8TO64_LE( in );
1590166591.30:         ^~~~~~~~~~~~~~~
1590166591.30: ./hv_func.h:189:23: note: expanded from macro 'U8TO64_LE'
1590166591.30:    ((U64TYPE)((p)[4]) << 32) | \
1590166591.30:                       ^  ~~
1590166591.30: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     m = U8TO64_LE( in );
1590166591.30:         ^~~~~~~~~~~~~~~
1590166591.30: ./hv_func.h:190:23: note: expanded from macro 'U8TO64_LE'
1590166591.30:    ((U64TYPE)((p)[5]) << 40) | \
1590166591.30:                       ^  ~~
1590166591.30: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     m = U8TO64_LE( in );
1590166591.30:         ^~~~~~~~~~~~~~~
1590166591.30: ./hv_func.h:191:23: note: expanded from macro 'U8TO64_LE'
1590166591.30:    ((U64TYPE)((p)[6]) << 48) | \
1590166591.30:                       ^  ~~
1590166591.30: ./hv_func.h:227:9: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     m = U8TO64_LE( in );
1590166591.30:         ^~~~~~~~~~~~~~~
1590166591.30: ./hv_func.h:192:23: note: expanded from macro 'U8TO64_LE'
1590166591.30:    ((U64TYPE)((p)[7]) << 56))
1590166591.30:                       ^  ~~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:229:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:230:5: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:     SIPROUND;
1590166591.30:     ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:236:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   case 7: b |= ( ( U64TYPE )in[ 6] )  << 48;
1590166591.30:                                       ^  ~~
1590166591.30: ./hv_func.h:237:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   case 6: b |= ( ( U64TYPE )in[ 5] )  << 40;
1590166591.30:                                       ^  ~~
1590166591.30: ./hv_func.h:238:39: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   case 5: b |= ( ( U64TYPE )in[ 4] )  << 32;
1590166591.30:                                       ^  ~~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:247:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:248:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:252:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:253:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:254:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:196:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v1; v1=ROTL64(v1,13); v1 ^= v0; v0=ROTL64(v0,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:197:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v3; v3=ROTL64(v3,16); v3 ^= v2;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:198:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v0 += v3; v3=ROTL64(v3,21); v3 ^= v0;     \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:18: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                  ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^         ~~
1590166591.30: ./hv_func.h:157:39: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                       ^  ~
1590166591.30: ./hv_func.h:255:3: warning: shift count >= width of type [-Wshift-count-overflow]
1590166591.30:   SIPROUND;
1590166591.30:   ^~~~~~~~
1590166591.30: ./hv_func.h:199:46: note: expanded from macro 'SIPROUND'
1590166591.30:     v2 += v1; v1=ROTL64(v1,17); v1 ^= v2; v2=ROTL64(v2,32); \
1590166591.30:                                              ^~~~~~~~~~~~~
1590166591.30: ./hv_func.h:157:59: note: expanded from macro 'ROTL64'
1590166591.30:     #define ROTL64(x,r)  (((U64TYPE)x << r) | ((U64TYPE)x >> (64 - r)))
1590166591.30:                                                           ^  ~~~~~~~~
1590166591.30: In file included from gv.c:36:
1590166591.30: In file included from ./perl.h:3781:
1590166591.30: ./cop.h:49:5: error: unknown type name 'sigjmp_buf'
1590166591.30:     Sigjmp_buf          je_buf;         /* uninit if je_prev is NULL */
1590166591.30:     ^
1590166591.30: ./perl-orig-config.h:2334:20: note: expanded from macro 'Sigjmp_buf'
1590166591.30: #define Sigjmp_buf sigjmp_buf
1590166591.30:                    ^
1590166591.30: In file included from gv.c:36:
1590166591.30: ./perl.h:4441:7: error: expected identifier or '('
1590166591.30: Off_t lseek (int,Off_t,int);
1590166591.30:       ^
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.30:   ({                                   \
1590166591.30:    ^
1590166591.30: In file included from gv.c:36:
1590166591.30: ./perl.h:4441:7: error: expected ')'
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:4: note: expanded from macro 'lseek'
1590166591.30:   ({                                   \
1590166591.30:    ^
1590166591.30: ./perl.h:4441:7: note: to match this '('
1590166591.30: /opt/wasi-sdk/share/wasi-sysroot/include/unistd.h:71:3: note: expanded from macro 'lseek'
1590166591.30:   ({                                   \
1590166591.30:   ^
1590166591.30: 77 warnings and 3 errors generated.
1590166591.30: specmake: *** [/home/ucsd/SpectreSandboxing/spec2017/benchspec/Makefile.defaults:352: gv.o] Error 1
1590166591.45: Stop make command: 2020-05-22 09:56:31 (1590166591.44954)
1590166591.45: Elapsed time for make command: 00:00:00 (0.369123935699463)
1590166591.45: Error with make 'specmake --output-sync -j8 build':
1590166591.45:   ----------------------------------------------------------------------------
1590166591.45:   Please review this file:
1590166591.45:     "/home/ucsd/SpectreSandboxing/spec2017/benchspec/CPU/600.perlbench_s/build/build_base_wasm_lucet.0000/make.out"
1590166591.45:   ----------------------------------------------------------------------------
1590166591.45:   Command returned exit code 2
1590166591.46:   Error with make!
1590166591.46:   Compile for '600.perlbench_s' ended at: 2020-05-22 09:56:31 (1590166591)
1590166591.46:   Elapsed compile for '600.perlbench_s': 00:00:01 (1)
1590166591.46: *** Error building 600.perlbench_s base
1590166591.46: If you wish to ignore this error, please use '-I' or ignore errors.
1590166591.46: update_config_exehash(Spec::Config=HASH(0x4a56470), wasm_lucet) called
1590166591.46: runcpu finished at 2020-05-22 09:56:31; 1 total seconds elapsed
1590166591.64: The log for this run is in /home/ucsd/SpectreSandboxing/spec2017/result/CPU2017.074.log
1590166591.64: The debug log for this run is in /home/ucsd/SpectreSandboxing/spec2017/result/CPU2017.074.log.debug
1590166591.64: *
1590166591.64: * Temporary files were NOT deleted; keeping temporaries such as
1590166591.64: * /home/ucsd/SpectreSandboxing/spec2017/result/CPU2017.074.log.debug and
1590166591.64: * /home/ucsd/SpectreSandboxing/spec2017/tmp/CPU2017.074
1590166591.64: * (These may be large!)
1590166591.64: *
1590166591.64: runcpu finished at 2020-05-22 09:56:31; 2 total seconds elapsed
